local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Troller Gui                                                                 Yield#1111", "Synapse")


-- MAIN
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Admin etc")


MainSection:NewButton("Info Hub", "Best script ever!1!!11!", function()
	local g = game
	if not g:IsLoaded() then
		g.Loaded:Wait()
	end

	local plrs = g:GetService("Players")
	local lp = plrs.LocalPlayer
	local mouse = lp:GetMouse()
	local ws = g:GetService("Workspace")
	local cg = g:GetService("CoreGui")
	local pg = lp:FindFirstChildOfClass("PlayerGui")
	local rs = g:GetService("RunService")
	local uis = g:GetService("UserInputService")
	local stepped = rs.Stepped
	local renderstepped = rs.RenderStepped
	local heartbeat = rs.Heartbeat
	local currentplayer = lp
	local fenv = getfenv()
	local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.sethiddenprop or fenv.set_hidden_prop
	local ssr = fenv.setsimulationradius or fenv.setsimradius or fenv.set_simulation_radius
	local v3 = Vector3.new
	local v3_0 = v3(0, 0, 0)
	local cf = CFrame.new
	local flycf = false

	local function gp(parent, name, className)
		local ret = nil
		pcall(function()
			for i, v in pairs(parent:GetChildren()) do
				if (v.Name == name) and v:IsA(className) then
					ret = v
					break
				end
			end
		end)
		return ret
	end

	local guiname = g.PlaceId .. "_info"

	local gui = nil
	pcall(function()
		gui = gp(cg, guiname, "ScreenGui")
	end)
	gui = gui or gp(pg, guiname, "ScreenGui")
	if gui then
		gui:Destroy()
	end

	renderstepped:Wait()

	gui = Instance.new("ScreenGui")
	gui.Name = guiname
	gui.ResetOnSpawn = false
	gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	gui.Enabled = false
	gui.IgnoreGuiInset = true
	pcall(function()
		gui.Parent = cg
	end)
	if gui.Parent ~= cg then
		gui.Parent = pg
	end
	gui:GetPropertyChangedSignal("Parent"):Connect(function()
		if not (gui and gui.Parent) then
			gui = false
		end
	end)
	local mainFrame = Instance.new("Frame")
	mainFrame.Name = "mainFrame"
	mainFrame.Parent = gui
	mainFrame.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
	mainFrame.BorderSizePixel = 0
	mainFrame.Position = UDim2.new(0, 0, 1, -200)
	mainFrame.Size = UDim2.new(1, 0, 0, 200)
	local mf = Instance.new("Frame")
	mf.Name = "mf"
	mf.Parent = mainFrame
	mf.BackgroundColor3 = mainFrame.BackgroundColor3
	mf.BorderSizePixel = 0
	mf.Position = UDim2.new(0, 0, 1, 0)
	mf.Size = UDim2.new(1, 0, 1, 0)
	local scriptName = Instance.new("TextLabel")
	scriptName.Name = "scriptName"
	scriptName.Parent = mainFrame
	scriptName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	scriptName.BackgroundTransparency = 1.000
	scriptName.BorderSizePixel = 0
	scriptName.Size = UDim2.new(1, 0, 0, 20)
	scriptName.Font = Enum.Font.SourceSans
	scriptName.Text = "Yield#1111"
	scriptName.TextColor3 = Color3.fromRGB(181, 181, 181)
	scriptName.TextSize = 20.000
	scriptName.TextWrapped = true
	local line = Instance.new("Frame")
	line.Name = "line"
	line.Parent = scriptName
	line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	line.BackgroundTransparency = 0.700
	line.BorderSizePixel = 0
	line.Position = UDim2.new(0, 5, 1, 0)
	line.Size = UDim2.new(1, -10, 0, 1)
	local showhide = Instance.new("TextButton")
	showhide.Name = "showhide"
	showhide.Parent = mainFrame
	showhide.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
	showhide.BorderSizePixel = 0
	showhide.Position = UDim2.new(0.5, -25, 0, -30)
	showhide.Size = UDim2.new(0, 50, 0, 30)
	showhide.Font = Enum.Font.SourceSans
	showhide.Text = "\\/"
	showhide.TextColor3 = Color3.fromRGB(235, 235, 235)
	showhide.TextSize = 20.000
	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Name = "scrollingFrame"
	scrollingFrame.Parent = mainFrame
	scrollingFrame.Active = true
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	scrollingFrame.BackgroundTransparency = 1.000
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.ClipsDescendants = false
	scrollingFrame.Position = UDim2.new(0, 5, 0, 30)
	scrollingFrame.Size = UDim2.new(1, -10, 1, -35)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.ScrollBarThickness = 10
	scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.X
	local UIListLayout = Instance.new("UIListLayout")
	UIListLayout.Parent = scrollingFrame
	UIListLayout.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 10)

	local event = Instance.new("BindableEvent", gui)
	local fps = 60
	fps = 1 / fps
	local tf = 0
	local con = nil
	con = renderstepped:Connect(function(s)
		if not gui then
			con:Disconnect()
			return
		end
		tf += s
		if tf >= fps then
			for i=1, math.floor(tf / fps) do
				event:Fire(true)
			end
			tf = 0
		end
	end)
	local event = event.Event

	event:Wait()

	local sn = scriptName.Text
	local function notify(msg)
		spawn(function()
			local msg1 = sn .. " - " .. msg
			scriptName.Text = msg1
			wait(3)
			if scriptName.Text == msg1 then
				scriptName.Text = sn
			end
		end)
	end

	if gui.Parent == pg then
		notify("gui in playerGui")
	end

	local ancprt = nil
	local function weldtp(part, cfr)
		if not (part and part.Parent and part:IsA("BasePart") and (not part:IsGrounded())) then
			return nil
		end
		if not (ancprt and ancprt.Parent and ancprt:IsA("BasePart") and ancprt:IsGrounded() and ancprt:IsDescendantOf(ws)) then
			for i, v in pairs(ws:GetDescendants()) do
				if v and v.Parent and v:IsA("BasePart") and v:IsGrounded() then
					ancprt = v
					break
				end
			end
		end
		if not ancprt then
			ancprt = Instance.new("Part", ws)
			ancprt.Anchored = true
			ancprt.Transparency = 1
			ancprt.CanCollide = false
			ancprt.Name = "weldtp part"
		end
		local weld = Instance.new("Weld")
		weld.Part0 = part
		weld.C0 = cfr:Inverse()
		weld.Part1 = ancprt
		weld.C1 = ancprt.CFrame:Inverse()
		weld.Parent = ws
		stepped:Wait()
		pcall(function()
			weld:Destroy()
		end)
	end

	local function respawnRequest()
		local ccfr = ws.CurrentCamera.CFrame
		local c = lp.Character
		lp.Character = nil
		lp.Character = c
		ws.CurrentCamera:GetPropertyChangedSignal("CFrame"):Wait()
		ws.CurrentCamera.CFrame = ccfr
	end

	local function makeFrame(parent, text, color)
		local frame = Instance.new("Frame")
		frame.Name = "frame_" .. text
		frame.Parent = parent
		frame.BackgroundColor3 = color
		frame.Size = UDim2.new(0, 300, 0, 145)
		frame.BorderSizePixel = 0
		local framelabel = Instance.new("TextLabel")
		framelabel.Name = "framelabel"
		framelabel.Parent = frame
		framelabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		framelabel.BackgroundTransparency = 1.000
		framelabel.BorderSizePixel = 0
		framelabel.Size = UDim2.new(1, 0, 0, 20)
		framelabel.Font = Enum.Font.SourceSans
		framelabel.Text = text
		framelabel.TextColor3 = Color3.fromRGB(197, 197, 197)
		framelabel.TextSize = 14.000
		local line = Instance.new("Frame")
		line.Name = "line"
		line.Parent = framelabel
		line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		line.BackgroundTransparency = 0.700
		line.BorderSizePixel = 0
		line.Position = UDim2.new(0, 5, 1, 0)
		line.Size = UDim2.new(1, -10, 0, 1)
		local ScrollingFrame = Instance.new("ScrollingFrame")
		ScrollingFrame.Parent = frame
		ScrollingFrame.Active = true
		ScrollingFrame.Name = "ScrollingFrame"
		ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ScrollingFrame.BackgroundTransparency = 1.000
		ScrollingFrame.BorderSizePixel = 0
		ScrollingFrame.Position = UDim2.new(0, 5, 0, 25)
		ScrollingFrame.Size = UDim2.new(1, -5, 1, -30)
		ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
		ScrollingFrame.ScrollBarThickness = 7
		ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
		local UIListLayout = Instance.new("UIListLayout")
		UIListLayout.Parent = ScrollingFrame
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 5)
		renderstepped:Wait()
		return frame
	end

	showhide.MouseButton1Click:Connect(function()
		if showhide.Text == "/\\" then
			showhide.Text = "\\/"
			mainFrame:TweenPosition(UDim2.new(0, 0, 1, -200), "Out", "Elastic", 1)
		else
			showhide.Text = "/\\"
			mainFrame:TweenPosition(UDim2.new(0, 0, 1, -5), "Out", "Elastic", 1)
		end
	end)

	local controllable = {}
	local lastc = nil
	local con = nil
	con = lp.CharacterAdded:Connect(function(c)
		if not gui then
			con:Disconnect()
			return
		end
		if lastc == c then
			return
		end
		if c and c.Parent then
			lastc = c
			controllable = {}
			for i, v in pairs(plrs:GetPlayers()) do
				local c = v.Character
				if c and c.Parent then
					table.insert(controllable, c)
				end
			end
		end
	end)

	local viewedPlayer = nil
	local viewbutton = {Text = ""}

	local playersframe = makeFrame(scrollingFrame, "Players", Color3.fromRGB(12, 59, 100))
	local playercframe = makeFrame(playersframe, "playerscontrol", Color3.fromRGB(12, 59, 100))
	playercframe.BorderSizePixel = 1.000
	playercframe.BorderColor3 = Color3.fromRGB(27, 42, 53)
	playercframe.Position = UDim2.new(0, 10, -1, -40)
	playercframe.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	playercframe.Visible = true
	local playerframef = makeFrame(playercframe, "friends", Color3.fromRGB(0, 150, 0))
	playerframef.Position = UDim2.new(1, 10, 0, 5)

	local function addbtn(parent, plr)
		local playerbutton = Instance.new("TextButton")
		playerbutton.Name = plr.Name
		playerbutton.Parent = parent
		if plr == lp then
			playerbutton.BackgroundColor3 = Color3.fromRGB(100, 200, 200)
		else
			playerbutton.BackgroundColor3 = Color3.fromRGB(136, 136, 136)
		end
		playerbutton.BorderSizePixel = 0
		playerbutton.Size = UDim2.new(1, -10, 0, 20)
		playerbutton.Font = Enum.Font.SourceSans
		playerbutton.Text = plr.Name
		if plr.Name ~= plr.DisplayName then
			playerbutton.Text = playerbutton.Text .. " (" .. plr.DisplayName .. ")"
		end
		playerbutton.TextColor3 = Color3.fromRGB(0, 0, 0)
		playerbutton.TextSize = 15.000
		playerbutton.MouseButton1Click:Connect(function()
			playercframe.framelabel.Text = "player: " .. playerbutton.Text
			currentplayer = plr
			playercframe.Visible = true
			playerframef.Visible = false
			viewbutton.Text = ((viewedPlayer == plr) and "unview") or "view"
		end)
	end

	local function unview()
		viewedPlayer = nil
		viewbutton.Text = "view"
		local c = lp.Character
		if c and c.Parent then
			local subject = c:FindFirstChildOfClass("Humanoid") or c:FindFirstChildWhichIsA("BasePart")
			if subject then
				ws.CurrentCamera.CameraType = Enum.CameraType.Custom
				ws.CurrentCamera.CameraSubject = subject
			else
				notify("no part to view")
			end
		else
			notify("character not found")
		end
	end

	local playersScroll = playersframe.ScrollingFrame

	for i, v in pairs(plrs:GetPlayers()) do
		addbtn(playersScroll, v)
	end
	local reset = function() end
	local con = nil
	con = plrs.PlayerAdded:Connect(function(plr)
		if gui then
			addbtn(playersScroll, plr)
		else
			con:Disconnect()
		end
	end)
	local con = nil
	con = plrs.PlayerRemoving:Connect(function(plr)
		if gui then
			local playerbutton = gp(playersScroll, plr.Name, "TextButton")
			if playerbutton then
				playerbutton:Destroy()
			end
			if plr == currentplayer then
				playercframe.Visible = false
			end
			if plr == viewedPlayer then
				unview()
			end
		else
			con:Disconnect()
		end
	end)
	local hideplayerc = Instance.new("TextButton")
	hideplayerc.Name = "addpositionbutton"
	hideplayerc.Parent = playercframe.framelabel
	hideplayerc.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
	hideplayerc.BorderSizePixel = 0
	hideplayerc.Position = UDim2.new(1, -17, 0, 2)
	hideplayerc.Size = UDim2.new(0, 15, 0, 15)
	hideplayerc.Font = Enum.Font.SourceSans
	hideplayerc.Text = "X"
	hideplayerc.TextColor3 = Color3.fromRGB(206, 206, 206)
	hideplayerc.TextSize = 14.000
	hideplayerc.MouseButton1Click:Connect(function()
		playercframe.Visible = false
	end)
	local function makeplrbutton(buttontext)
		local button = Instance.new("TextButton")
		button.Name = "plrButton"
		button.Parent = playercframe.ScrollingFrame
		button.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
		button.BorderSizePixel = 0
		button.Size = UDim2.new(1, -10, 0, 20)
		button.Font = Enum.Font.SourceSans
		button.Text = buttontext
		button.TextColor3 = Color3.fromRGB(226, 226, 226)
		button.TextSize = 15.000
		return button
	end
	makeplrbutton("goto").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			local tp = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
			if tp then
				local c1 = currentplayer.Character
				if c1 and c1.Parent then
					local to = gp(c1, "HumanoidRootPart", "BasePart") or gp(c1, "Head", "BasePart") or c1:FindFirstChildWhichIsA("BasePart")
					if to then
						if flycf then
							flycf = to.CFrame
						else
							weldtp(tp, to.CFrame)
						end
						notify("goto: " .. currentplayer.Name)
					else
						notify("no target part found")
					end
				else
					notify("target character not found")
				end
			else
				notify("no part found")
			end
		else
			notify("character not found")
		end
	end)
	viewbutton = makeplrbutton("view")
	viewbutton.MouseButton1Click:Connect(function()
		if viewedPlayer == currentplayer then
			unview()
		else
			viewedPlayer = currentplayer
			viewbutton.Text = "unview"
		end
	end)

	local cbringb = makeplrbutton("cbring")

	local function noanimations()
		local c = lp.Character
		if c and c.Parent then
			local hum = c:FindFirstChildOfClass("Humanoid")
			if hum then
				local animate = gp(c, "Animate", "LocalScript")
				if animate then
					animate.Disabled = true
				end
				for i, v in pairs(hum:GetPlayingAnimationTracks()) do
					v:Stop()
				end
			else
				notify("humanoid not found")
			end
		else
			notify("character not found")
		end
	end

	local function isConnected(part0, part1, tested)
		if not ((typeof(part0) == "Instance") and part0:IsA("BasePart")) then
			return false
		end
		if not ((typeof(part1) == "Instance") and part1:IsA("BasePart")) then
			return false
		end
		if not tested then
			tested = {}
		end
		local ret = false
		table.insert(tested, part0)
		for i, v in pairs(part0:GetConnectedParts()) do
			if part1 == v then
				return true
			elseif not table.find(tested, v) then
				ret = ret or isConnected(v, part1, tested)
			end
		end
		return ret
	end

	local function attach(c1)
		local bck = lp:FindFirstChildOfClass("Backpack")
		local c = lp.Character
		--checks for: model, humanoid, arm, torso for main character:
		if not (c and c.Parent) then
			notify("character not found")
			return false
		end
		local hum = c:FindFirstChildOfClass("Humanoid")
		if not hum then
			notify("humanoid not found")
			return false
		end 
		local arm = gp(c, "Right Arm", "BasePart") or gp(c, "RightHand", "BasePart")
		if not arm then
			notify("arm not found")
			return false
		end
		local torso = gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart")
		if not torso then
			notify("torso not found")
			return
		end
		if torso:IsGrounded() then
			notify("torso is grounded")
			return
		end
		if not isConnected(arm, torso) then
			notify("arm and toso not connected")
			return
		end
		--checks for: tool:
		local tool = c:FindFirstChildOfClass("Tool")
		if (not tool) and bck then
			tool = bck:FindFirstChildOfClass("Tool")
		end
		if not tool then
			notify("no tool found")
			return false
		end
		local handle = gp(tool, "Handle", "BasePart")
		if not handle then
			notify("tool handle not found")
			return
		end
		--checks for: model, humanoid, arm, torso for target character:
		if not (c1 and c1.Parent) then
			notify("target character not found")
			return false
		end
		local hum1 = c1:FindFirstChildOfClass("Humanoid")
		if not hum1 then
			notify("target humanoid not found")
			return false
		end
		local arm1 = gp(c1, "Right Arm", "BasePart") or gp(c1, "RightHand", "BasePart")
		if not arm1 then
			notify("target arm not found")
			return false
		end
		local torso1 = gp(c1, "Torso", "BasePart") or gp(c1, "UpperTorso", "BasePart")
		if not torso1 then
			notify("target torso not found")
			return
		end
		if torso1:IsGrounded() then
			notify("target torso is grounded")
			return
		end
		if not isConnected(arm1, torso1) then
			notify("target arm and toso not connected")
			return
		end
		--all checks good
		if bck then
			for i, v in pairs(c:GetChildren()) do
				if v:IsA("Tool") then
					v.Parent = bck
				end
			end
		end
		local nhum = hum:Clone()
		hum:Destroy()
		hum = nhum
		hum.Parent = c
		hum:EquipTool(tool)
		for i, v in pairs(c1:GetDescendants()) do
			if v and v.Parent and v:IsA("BasePart") then
				v.Massless = true
			end
		end
		while stepped:Wait() do
			--checks for: model, humanoid, arm, torso for main character:
			if not (c and c.Parent) then
				notify("character removed")
				return false
			end
			if (not hum and hum.Parent) then
				notify("humanoid removed")
				return false
			end
			if not (arm and arm.Parent) then
				notify("arm removed")
				return false
			end
			if not (torso and torso.Parent) then
				notify("torso removed")
				return false
			end
			if torso:IsGrounded() then
				notify("torso got grounded")
				return
			end
			if not isConnected(arm, torso) then
				notify("arm and toso connection removed")
				return
			end
			--checks for: model, humanoid, arm, torso for target character:
			if not (c1 and c1.Parent) then
				notify("target character removed")
				return false
			end
			if not (hum1 and hum1.Parent) then
				notify("target humanoid removed")
				return false
			end
			if not (arm1 and arm1.Parent) then
				notify("target arm removed")
				return false
			end
			if not (torso1 and torso1.Parent) then
				notify("target torso removed")
				return false
			end
			if torso:IsGrounded() then
				notify("target torso got grounded")
				return
			end
			if not isConnected(arm1, torso1) then
				notify("target arm and toso connection removed")
				return
			end
			--checks for: tool
			if not (tool and tool.Parent) then
				notify("tool removed")
				return false
			end
			if not (handle and handle.Parent) then
				notify("tool handle removed")
				return false
			end
			if (tool.Parent ~= c) and (tool.Parent ~= c1) and (tool.Parent ~= bck) then
				notify("unexpected tool parent")
				return false
			end
			--all checks good
			if (tool.Parent == c1) then
				break
			end
			tool.Parent = c
			weldtp(arm1, handle.CFrame)
			if (tool.Parent == c1) then
				break
			end
		end
		return handle
	end

	makeplrbutton("bring").MouseButton1Click:Connect(function()
		local plr = currentplayer
		local c1 = plr.Character
		if not (c1 and c1.Parent) then
			notify("target character not found")
			return
		end
		if not table.find(controllable, c1) then
			reset(true)
			wait(0.1)
		end
		if not (plr and plr.Parent) then
			notify("target player left")
			return
		end
		if not (c1 and c1.Parent) then
			c1 = currentplayer.Character
		end
		if not (c1 and c1.Parent) then
			notify("target character not found")
			return
		end
		local c = lp.Character
		if not (c and c.Parent) then
			notify("character not found")
			return
		end
		local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "Head", "BasePart")
		if not part then
			notify("part not found")
			return
		end
		local cfr = part.CFrame
		local joint = attach(currentplayer.Character)
		if not joint then
			return
		end
		weldtp(part, cfr)
		wait(0.5)
		if c and c.Parent and part and part.Parent and joint and joint.Parent then
			weldtp(part, cfr)
			if not (joint and joint.Parent) then
				notify("joint removed")
				reset(false)
				return
			end
			joint:BreakJoints()
			reset(false)
			notify("brought " .. currentplayer.Name)
		end
	end)

	makeplrbutton("kill").MouseButton1Click:Connect(function()
		local plr = currentplayer
		local c1 = plr.Character
		if not (c1 and c1.Parent) then
			return notify("target character not found")
		end
		if not table.find(controllable, c1) then
			reset(true)
			wait(0.1)
		end
		if not (plr and plr.Parent) then
			return notify("target player left")
		end
		if not (c1 and c1.Parent) then
			return notify("target character removed")
		end
		local c = lp.Character
		if not (c and c.Parent) then
			return notify("character not found")
		end
		local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "Head", "BasePart")
		if not part then
			return notify("part not found")
		end
		local hum = c1:FindFirstChildOfClass("Humanoid")
		if not hum then
			return notify("humanoid not found")
		end
		local cfr = part.CFrame
		local part1 = gp(c1, "HumanoidRootPart", "BasePart") or gp(c1, "Torso", "BasePart") or gp(c1, "UpperTorso", "BasePart") or gp(c1, "Head", "BasePart")
		if part1 then
			weldtp(part, part1.CFrame)
		end
		if hum.Health > 0 then
			hum.BreakJointsOnDeath = false
		end
		wait(0.1)
		hum.Health = 0
		wait()
		hum:ChangeState(Enum.HumanoidStateType.Dead)
		local joint = attach(c1)
		if not joint then
			return
		end
		if hum then
			hum.Health = 1
		end
		wait(0.3)
		if joint then
			joint:BreakJoints()
		end
		weldtp(part, cfr)
		reset(false)
		notify("attempted to kill " .. plr.Name)
		if true then return end -----------------------
		local con, con1 = nil, nil
		con = heartbeat:Connect(function()
			if not (part and part.Parent) then
				con:Disconnect()
				con1:Disconnect()
				return
			end
			part.Velocity = v3(0, -200000, 0)
		end)
		con1 = stepped:Connect(function()
			if not (part and part.Parent) then
				con:Disconnect()
				con1:Disconnect()
				return
			end
			part.Velocity = v3_0
		end)
		wait(0.5)
		con:Disconnect()
		con1:Disconnect()
		if c and c.Parent and part and part.Parent and joint and joint.Parent then
			weldtp(part, cfr)
			if not (joint and joint.Parent) then
				notify("joint removed")
				reset(false)
				return
			end
			joint:BreakJoints()
			reset(false)
			notify("attempted to kill " .. currentplayer.Name)
		else
			notify("something went wrong")
		end
	end)

	makeplrbutton("attach").MouseButton1Click:Connect(function()
		return attach(currentplayer.Character) and notify("attached to " .. currentplayer.Name)
	end)

	makeplrbutton("view friends").MouseButton1Click:Connect(function()
		playerframef.Visible = not playerframef.Visible
		if not playerframef.Visible then
			return
		end
		playerframef.framelabel.Text = "friends of: " .. currentplayer.Name
		local scroll = playerframef.ScrollingFrame
		for i, v in pairs(scroll:GetChildren()) do
			if v and v.Parent and v:IsA("TextButton") then
				v:Destroy()
			end
		end
		for i, v in pairs(plrs:GetPlayers()) do
			spawn(function()
				if v and v.Parent and currentplayer:IsFriendsWith(v.UserId) then
					addbtn(playerframef.ScrollingFrame, v)
				end
			end)
		end
	end)

	local function makeflingbutton(partname)
		makeplrbutton("fling (" .. partname .. ")").MouseButton1Click:Connect(function()
			local c = lp.Character
			if c and c.Parent then
				local hrp = gp(c, partname, "BasePart")
				if hrp then
					local c1 = currentplayer.Character
					if c1 and c1.Parent then
						local hrp1 = gp(c1, partname, "BasePart")
						if hrp1 then						
							c:BreakJoints()
							hrp.CustomPhysicalProperties = PhysicalProperties.new(0.01, 0.01, 0.01, 0.01, 0.01)
							for i, v in pairs(c:GetChildren()) do
								if (v ~= hrp) and v and v.Parent and v:IsA("BasePart") then
									v:Destroy()
								end
							end
							hrp.Transparency = 0.5
							while heartbeat:Wait() and c and c.Parent and hrp and hrp.Parent and c1 and c1.Parent and hrp1 and hrp1.Parent do
								local pos = {x=0, y=0, z=0}
								pos.x = hrp1.Position.X
								pos.y = hrp1.Position.Y
								pos.z = hrp1.Position.Z
								pos.x += hrp1.Velocity.X / 2
								pos.y += hrp1.Velocity.Y / 2
								pos.z += hrp1.Velocity.Z / 2
								local heightlock = ws.FallenPartsDestroyHeight + 5
								if pos.y < heightlock then
									pos.y = heightlock
								end
								hrp.CanCollide = false
								hrp.Position = v3(pos.x, pos.y, pos.z)
								hrp.Velocity = v3(0, 1000, 0)
								hrp.RotVelocity = v3(10000, 10000, 10000)
								ws.CurrentCamera.CameraSubject = hrp1
							end
							wait(0.1)
							local c = lp.Character
							if (c and c.Parent) then
								ws.CurrentCamera.CameraSubject = c:FindFirstChildOfClass("Humanoid") or c:FindFirstChildWhichIsA("BasePart")
							end
						else
							notify("target part not found")
						end
					else
						notify("target character not found")
					end
				else
					notify("part not found")
				end
			else
				notify("character not found")
			end
		end)
	end
	makeflingbutton("Head")
	makeflingbutton("HumanoidRootPart")
	makeflingbutton("Torso")

	local graphicsframe = makeFrame(scrollingFrame, "Graphics", Color3.fromRGB(84, 45, 162))
	local function makegraphicsbutton(buttontext)
		local button = Instance.new("TextButton")
		button.Name = "removefog"
		button.Parent = graphicsframe.ScrollingFrame
		button.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
		button.BorderSizePixel = 0
		button.Size = UDim2.new(1, -10, 0, 20)
		button.Font = Enum.Font.SourceSans
		button.Text = buttontext
		button.TextColor3 = Color3.fromRGB(226, 226, 226)
		button.TextSize = 15.000
		return button
	end
	local lig = g:GetService("Lighting")
	makegraphicsbutton("remove fog").MouseButton1Click:Connect(function()
		lig.FogStart = 9e9
		lig.FogEnd = 9e9
	end)
	local function setupremove(button, classname)
		button.MouseButton1Click:Connect(function()
			for i, v in pairs(g:GetDescendants()) do
				if v:IsA(classname) then
					v:Destroy()
				end
			end
		end)
	end
	setupremove(makegraphicsbutton("remove atmosphere effects"), "Atmosphere")
	setupremove(makegraphicsbutton("remove blur"), "BlurEffect")
	setupremove(makegraphicsbutton("remove decals"), "Decal")
	setupremove(makegraphicsbutton("default sky"), "Sky")
	setupremove(makegraphicsbutton("remove sun rays"), "SunRaysEffect")
	setupremove(makegraphicsbutton("remove particles"), "ParticleEmitter")
	setupremove(makegraphicsbutton("remove color correction effects"), "ColorCorrectionEffect")

	local cfly = nil
	local fhrp = nil
	local flyspeed = 1

	local positionsframe = makeFrame(scrollingFrame, "Positions", Color3.fromRGB(162, 108, 42))
	local addpositionbutton = Instance.new("TextButton")
	addpositionbutton.Name = "addpositionbutton"
	addpositionbutton.Parent = positionsframe.framelabel
	addpositionbutton.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
	addpositionbutton.BorderSizePixel = 0
	addpositionbutton.Position = UDim2.new(1, -77, 0, 2)
	addpositionbutton.Size = UDim2.new(0, 75, 1, -4)
	addpositionbutton.Font = Enum.Font.SourceSans
	addpositionbutton.Text = "+ add current"
	addpositionbutton.TextColor3 = Color3.fromRGB(206, 206, 206)
	addpositionbutton.TextSize = 14.000
	addpositionbutton.MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			local hrp = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
			if hrp then
				local cfr = hrp.CFrame
				local positionframe = Instance.new("Frame")
				local loadposbutton = Instance.new("TextButton")
				local removeposbutton = Instance.new("TextButton")
				local positionName = Instance.new("TextBox")
				positionframe.Name = "positionframe"
				positionframe.Parent = positionsframe.ScrollingFrame
				positionframe.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
				positionframe.BorderSizePixel = 0
				positionframe.Size = UDim2.new(1, -10, 0, 30)
				loadposbutton.Name = "loadposbutton"
				loadposbutton.Parent = positionframe
				loadposbutton.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
				loadposbutton.BorderSizePixel = 0
				loadposbutton.Position = UDim2.new(1, -70, 0, 5)
				loadposbutton.Size = UDim2.new(0, 40, 1, -10)
				loadposbutton.Font = Enum.Font.SourceSans
				loadposbutton.Text = "load"
				loadposbutton.TextColor3 = Color3.fromRGB(223, 223, 223)
				loadposbutton.TextSize = 16.000
				removeposbutton.Name = "removeposbutton"
				removeposbutton.Parent = positionframe
				removeposbutton.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
				removeposbutton.BorderSizePixel = 0
				removeposbutton.Position = UDim2.new(1, -25, 0, 5)
				removeposbutton.Size = UDim2.new(0, 20, 1, -10)
				removeposbutton.Font = Enum.Font.SourceSans
				removeposbutton.Text = "X"
				removeposbutton.TextColor3 = Color3.fromRGB(223, 223, 223)
				removeposbutton.TextSize = 16.000
				positionName.Name = "positionName"
				positionName.Parent = positionframe
				positionName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				positionName.BackgroundTransparency = 1.000
				positionName.BorderSizePixel = 0
				positionName.Position = UDim2.new(0, 5, 0, 5)
				positionName.Size = UDim2.new(1, -80, 1, -10)
				positionName.Font = Enum.Font.SourceSans
				positionName.Text = "Position1"
				positionName.ClearTextOnFocus = false
				positionName.TextColor3 = Color3.fromRGB(0, 0, 0)
				positionName.TextSize = 25.000
				positionName.TextXAlignment = Enum.TextXAlignment.Left
				loadposbutton.MouseButton1Click:Connect(function()
					c = lp.Character
					if c and c.Parent then
						hrp = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
						if hrp then
							if flycf then
								flycf = cfr
							else
								weldtp(hrp, cfr)
							end
						else
							notify("part not found")
						end
					else
						notify("character not found")
					end
				end)
				removeposbutton.MouseButton1Click:Connect(function()
					positionframe:Destroy()
				end)
			end
		end
	end)

	local charframe = makeFrame(scrollingFrame, "Character", Color3.fromRGB(99, 15, 15))
	local function makecharbutton(buttontext)
		local button = Instance.new("TextButton")
		button.Name = "charButton"
		button.Parent = charframe.ScrollingFrame
		button.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
		button.BorderSizePixel = 0
		button.Size = UDim2.new(1, -10, 0, 20)
		button.Font = Enum.Font.SourceSans
		button.Text = buttontext
		button.TextColor3 = Color3.fromRGB(226, 226, 226)
		button.TextSize = 15.000
		return button
	end
	local loopr = false
	local fakevoidp = nil
	reset = function(respawn)
		if fakevoidp then
			fakevoidp = nil
			wait(0.3)
		end
		local c = lp.Character
		local partName, cfr, ccfr = nil, nil, nil
		if not (c and c.Parent) then
			respawnRequest()
			if not loopr then
				notify("character not found, trying to respawn")
			end
			return
		end
		local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
		if not part then
			respawnRequest()
			if not loopr then
				notify("no part found in the character, trying to respawn")
			end
			return
		end
		partName, cfr, ccfr = part.Name, part.CFrame, ws.CurrentCamera.CFrame
		spawn(function()
			local c, part = c, nil
			while c and c.Parent do
				stepped:Wait()
			end
			while not (c and c.Parent) do
				stepped:Wait()
				c = lp.Character
			end
			while stepped:Wait() and c and c.Parent and (not part) do
				part = gp(c, partName, "BasePart")
			end
			if not part then
				if not loopr then
					notify("failed to tp back")
				end
				return
			end
			weldtp(part, cfr)
			ws.CurrentCamera.CFrame = ccfr
			cfr = false
			if not loopr then
				notify("respawned")
			end
		end)
		if respawn and (not loopr) then
			notify("respawning...")
		end
		if respawn then
			spawn(function()
				while c and c.Parent do
					if part and part.Parent then
						cfr = part.CFrame
					end
					ccfr = ws.CurrentCamera.CFrame
					stepped:Wait()
				end
			end)
			if plrs.RespawnTime > 0.5 then
				local spamrequest = true
				spawn(function()
					while wait() and spamrequest and c and c.Parent do
						respawnRequest()
					end
				end)
				wait(0.5)
				spamrequest = false
			else
				respawnRequest()
			end
			wait(plrs.RespawnTime - 0.5)
			part = nil
		end
		if c and c.Parent then
			if respawn then
				local hum = c:FindFirstChildOfClass("Humanoid")
				if hum then
					hum:Destroy()
				end
			end
			c:BreakJoints()
			while respawn and gui and cfr do
				stepped:Wait()
			end
		end
	end
	makecharbutton("respawn").MouseButton1Click:Connect(function()
		if not loopr then
			reset(true)
		end
	end)
	makecharbutton("reset").MouseButton1Click:Connect(function()
		reset(false)
	end)
	local looprb = makecharbutton("loop respawn")
	spawn(function()
		while wait() and gui do
			if loopr then
				reset(true)
			end
		end
	end)
	looprb.MouseButton1Click:Connect(function()
		loopr = not loopr
		looprb.Text = "loop respawn" .. ((loopr and " (Enabled)") or "")
	end)
	makecharbutton("remove meshes").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent and (v:IsA("Mesh") or v:IsA("SpecialMesh") or v:IsA("CharacterMesh")) then
					v:Destroy()
				end
			end
			notify("removed meshes")
		else
			notify("no character")
		end
	end)
	makecharbutton("break joints").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			c:BreakJoints()
			notify("broken joints")
		else
			notify("no character")
		end
	end)
	local noclipb = makecharbutton("noclip")
	local noclip = false
	noclipb.MouseButton1Click:Connect(function()
		noclip = not noclip
		noclipb.Text = "noclip" .. ((noclip and " (Enabled)") or "")
	end)
	local fakevoidb = makecharbutton("fake void")
	fakevoidb.MouseButton1Click:Connect(function()
		if fakevoidp then
			fakevoidp = nil
			fakevoidb.Text = "fake void"
		else
			local c = lp.Character
			if not (c and c.Parent) then
				notify("character not found")
				return
			end
			local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
			if not part then
				notify("no part found")
				return
			end
			fakevoidp = part
			fakevoidb.Text = "fake void (Enabled)"
			notify("character teleported under FallenPartsDestroyHeight")

			local dh = ws.FallenPartsDestroyHeight
			local cfr = fakevoidp.CFrame
			local newcf = cf(0, dh - 100, 0)
			local camcf = ws.CurrentCamera.CFrame
			ws.CurrentCamera.CameraType = Enum.CameraType.Scriptable
			ws.FallenPartsDestroyHeight = dh - 200
			while stepped:Wait() and gui and c and c.Parent and fakevoidp and fakevoidp.Parent do
				weldtp(fakevoidp, newcf)
			end
			ws.FallenPartsDestroyHeight = dh
			fakevoidb.Text = "fake void"
			if c and c.Parent then
				unview()
				ws.CurrentCamera.CFrame = camcf
				if part and part.Parent then
					weldtp(part, cfr)
					notify("teleported back")
				else
					notify("part removed")
				end
			else
				notify("character removed")
			end
		end
	end)
	makecharbutton("block tool").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			local tool = c:FindFirstChildOfClass("Tool")
			if tool then
				local found = false
				for i, v in pairs(tool:GetDescendants()) do
					if v and v.Parent and v:IsA("Mesh") or v:IsA("SpecialMesh") then
						v:Destroy()
					end
				end
				if found then
					notify("removed tool meshes")
				else
					notify("no meshes found")
				end
			else
				notify("tool not found")
			end
		else
			notify("no character")
		end
	end)
	local infjumpb = makecharbutton("infjump")
	local infjump = false
	local con = nil
	con = g:GetService("UserInputService").JumpRequest:Connect(function()
		if not gui then
			con:Disconnect()
			return
		end
		if infjump then
			local c = lp.Character
			if c and c.Parent then
				local hum = c:FindFirstChildOfClass("Humanoid")
				if hum then
					hum:ChangeState("Jumping")
				end
			end
		end
	end)
	infjumpb.MouseButton1Click:Connect(function()
		infjump = not infjump
		infjumpb.Text = "infjump" .. ((infjump and " (Enabled)") or "")
	end)
	makecharbutton("god (remove humanoid)").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			local hum = c:FindFirstChildOfClass("Humanoid")
			if hum then
				hum.Archivable = true
				local hum1 = hum:Clone()
				hum:Destroy()
				hum1.Parent = c
				notify("humanoid client sided")
			else
				notify("humanoid not found")
			end
		else
			notify("character not found")
		end
	end)
	local loopgb = makecharbutton("loop god mode")
	local loopg = false
	spawn(function()
		while wait() and gui do
			if loopg then
				local c = lp.Character
				if c and c.Parent then
					local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
					if part then
						local hum = c:FindFirstChildOfClass("Humanoid")
						if hum then
							local partName = part.Name
							local new = hum:Clone()
							hum:Destroy()
							new.Parent = c
							ws.CurrentCamera.CameraSubject = new
							local currentcfr = part.CFrame
							local camcfr = ws.CurrentCamera.CFrame
							while wait() and c and c.Parent and part and part.Parent do
								currentcfr = part.CFrame
								camcfr = ws.CurrentCamera.CFrame
								local ff = c:FindFirstChildOfClass("ForceField")
								if ff then
									ff:Destroy()
								end
							end
							part = nil
							while not (part and part.Parent) do
								wait()
								c = lp.Character
								part = gp(c, partName, "BasePart")
							end
							weldtp(part, currentcfr)
							ws.CurrentCamera.CFrame = camcfr
						end
					end
				end
			end
		end
	end)
	loopgb.MouseButton1Click:Connect(function()
		loopg = not loopg
		loopgb.Text = "loop god mode" .. ((loopg and " (Enabled)") or "")
	end)
	local flyb = makecharbutton("fly")
	flyb.MouseButton1Click:Connect(function()
		if cfly and cfly.Parent then
			cfly = nil
		else
			cfly = lp.Character
			flyb.Text = "fly (Enabled)"
		end
	end)

	local ctrlf = {
		["w"] = false,
		["a"] = false,
		["s"] = false,
		["d"] = false
	}
	local con = nil
	con = mouse.KeyDown:Connect(function(key)
		if not gui then
			con:Disconnect()
			return
		end
		key = key:lower()
		if ctrlf[key] ~= nil then
			ctrlf[key] = true
		end
	end)
	local con = nil
	con = mouse.KeyUp:Connect(function(key)
		if not gui then
			con:Disconnect()
			return
		end
		key = key:lower()
		if ctrlf[key] ~= nil then
			ctrlf[key] = false
		end
	end)
	local con = nil
	con = event:Connect(function()
		if not gui then
			con:Disconnect()
			return
		end
		if not flycf then
			return
		end
		local fb = ((ctrlf["w"] and flyspeed) or 0) + ((ctrlf["s"] and -flyspeed) or 0)
		local lr = ((ctrlf["a"] and -flyspeed) or 0) + ((ctrlf["d"] and flyspeed) or 0)
		local camcf = ws.CurrentCamera.CFrame
		local caX, caY, caZ, ca1, ca2, ca3, ca4, ca5, ca6, ca7, ca8, ca9 = camcf:GetComponents()
		flycf = cf(flycf.X, flycf.Y, flycf.Z, ca1, ca2, ca3, ca4, ca5, ca6, ca7, ca8, ca9)
		flycf += camcf.lookVector * fb
		flycf += camcf.rightVector * lr
	end)
	spawn(function()
		while stepped:Wait() and gui do
			if cfly and cfly.Parent then
				fhrp = (fhrp and (fhrp.Parent == cfly) and fhrp) or gp(cfly, "HumanoidRootPart", "BasePart") or gp(cfly, "Head", "BasePart") or cfly:FindFirstChildWhichIsA("BasePart")
				if fhrp then
					flycf = flycf or fhrp.CFrame
					weldtp(fhrp, flycf)
				end
			else
				flycf = false
				fhrp = nil
				flyb.Text = "fly"
			end
		end
	end)

	local hiddenfling = false
	spawn(function()
		local hrp, c, vel, movel = nil, nil, nil, 0.1
		while gui do
			heartbeat:Wait()
			if hiddenfling then
				while gui and hiddenfling and not (c and c.Parent and hrp and hrp.Parent) do
					heartbeat:Wait()
					c = lp.Character
					hrp = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart")
				end
				if gui and hiddenfling then 
					vel = hrp.Velocity
					hrp.Velocity = vel * 10000 + v3(0, 10000, 0)
					--hrp.CFrame = hrp.CFrame * cf(0, 0.001, 0)
					renderstepped:Wait()
					if c and c.Parent and hrp and hrp.Parent then
						hrp.Velocity = vel
					end
					stepped:Wait()
					if c and c.Parent and hrp and hrp.Parent then
						hrp.Velocity = vel + v3(0, movel, 0)
						movel = movel * -1
					end
				end
			end
		end
	end)

	local hiddenflingB = makecharbutton("hidden fling")
	hiddenflingB.MouseButton1Click:Connect(function()
		hiddenfling = not hiddenfling
		hiddenflingB.Text = "hidden fling" .. ((hiddenfling and " (Enabled)") or "")
	end)

	makecharbutton("anti respawn (wait 5 s)").MouseButton1Click:Connect(respawnRequest)
	makecharbutton("no animations").MouseButton1Click:Connect(noanimations)
	makecharbutton("sit").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			local hum = c:FindFirstChildOfClass("Humanoid")
			if hum then
				hum.Sit = not hum.Sit
			else
				notify("humanoid not found")
			end
		else
			notify("character not found")
		end
	end)
	makecharbutton("fake sit").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			local hum = c:FindFirstChildOfClass("Humanoid")
			if hum then
				hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
				hum.Sit = true
				notify("humanoid.Sit set to true")
			else
				notify("humanoid not found")
			end
		else
			notify("character not found")
		end
	end)
	makecharbutton("remove humanoidroot").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c then
			local cpar = c.Parent
			if cpar then
				local hrp = gp(c, "HumanoidRootPart", "BasePart")
				if hrp then
					c.Parent = nil
					hrp:Destroy()
					c.Parent = cpar
					notify("hrp removed")
				else
					notify("hrp not found")
				end
			else
				notify("character not found")
			end
		else
			notify("character not found")
		end
	end)
	makecharbutton("set CanTouch to false").MouseButton1Click:Connect(function()
		local c = lp.Character
		if c and c.Parent then
			local tool = c:FindFirstChildOfClass("Tool")
			for i, v in pairs(c:GetDescendants()) do
				if v and v.Parent and v:IsA("BasePart") and ((not tool) or (not v:IsDescendantOf(tool))) then
					v.CanTouch = false
				end
			end
			notify("CanTouch has been set to false")
		else
			notify("character not found")
		end
	end)
	local ctrltp = false
	local clicktpbutton = makecharbutton("ctrl click tp")
	clicktpbutton.MouseButton1Click:Connect(function()
		ctrltp = not ctrltp
		clicktpbutton.Text = "ctrl click tp" .. ((ctrltp and " (Enabled)") or "")
	end)
	local con = nil
	con = mouse.Button1Down:Connect(function()
		if not gui then
			con:Disconnect()
			return
		end
		if not ctrltp then
			return
		end
		if not (mouse.Target and uis:IsKeyDown(Enum.KeyCode.LeftControl)) then
			return
		end
		local to = mouse.Hit.Position + v3(0, 3, 0)
		to = cf(to, to + v3(-1, 0, -1) * ws.CurrentCamera.CFrame.LookVector)
		if flycf then
			flycf = to
			return
		end
		local c = lp.Character
		if not (c and c.Parent) then
			return
		end
		local hrp = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
		if hrp then
			weldtp(hrp, to)
		end
	end)
	makecharbutton("view").MouseButton1Click:Connect(unview)

	local utilframe = makeFrame(scrollingFrame, "Utilities", Color3.fromRGB(0, 150, 150))
	local utilscroll = utilframe.ScrollingFrame

	local function makeutilbutton(buttontext)
		local button = Instance.new("TextButton")
		button.Name = "utilButton"
		button.Parent = utilscroll
		button.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
		button.BorderSizePixel = 0
		button.Size = UDim2.new(1, -10, 0, 20)
		button.Font = Enum.Font.SourceSans
		button.Text = buttontext
		button.TextColor3 = Color3.fromRGB(226, 226, 226)
		button.TextSize = 15.000
		return button
	end

	local espb = makeutilbutton("esp")
	local esp = false
	espb.MouseButton1Click:Connect(function()
		esp = not esp
		espb.Text = "esp" .. ((esp and " (Enabled)") or "")
	end)
	local teamcheckb = makeutilbutton("esp team check")
	local espTeamCheck = false
	teamcheckb.MouseButton1Click:Connect(function()
		espTeamCheck = not espTeamCheck
		teamcheckb.Text = "esp team check" .. ((espTeamCheck and " (Enabled)") or "")
	end)

	local espcolor = Color3.fromRGB(255, 0, 0)

	local vpf = Instance.new("ViewportFrame", gui)
	vpf.BackgroundTransparency = 1
	vpf.BorderSizePixel = 0
	vpf.ImageTransparency = 0.5
	vpf.ImageColor3 = espcolor
	vpf.BackgroundColor3 = espcolor
	vpf.Size = UDim2.new(1, 0, 1, 0)
	vpf.Visible = true
	vpf.Name = "esp"

	local con = nil
	con = renderstepped:Connect(function()
		if not gui then
			con:Disconnect()
			return
		end
		if net then
			net(9e9)
		end
		vpf:ClearAllChildren()
		if esp then
			vpf.CurrentCamera = ws.CurrentCamera
			for i, plr in pairs(plrs:GetPlayers()) do
				if ( (not espTeamCheck) or (plr.Team ~= lp.Team) ) and (plr ~= lp) then
					local c = plr.Character
					if c and c.Parent then
						for i, part in pairs(c:GetDescendants()) do
							if part:IsA("BasePart") then
								local part1 = Instance.new("Part", vpf)
								part1.Color = espcolor
								part1.Size = part.Size
								part1.CFrame = part.CFrame
							end
						end
					end
				end
			end
		end
		if viewedPlayer then
			local c = viewedPlayer.Character
			if c and c.Parent then
				local subject = c:FindFirstChildOfClass("Humanoid") or c:FindFirstChildWhichIsA("BasePart")
				if subject then
					ws.CurrentCamera.CameraType = Enum.CameraType.Custom
					ws.CurrentCamera.CameraSubject = subject
				end
			end
		end
	end)

	local antiflingb = makeutilbutton("anti fling")
	local antifling = false
	antiflingb.MouseButton1Click:Connect(function()
		antifling = not antifling
		antiflingb.Text = "anti fling" .. ((antifling and " (Enabled)") or "")
	end)

	local con0, con1 = nil, nil
	local function antiflingF()
		if not gui then
			con0:Disconnect()
			con1:Disconnect()
			return
		end
		if antifling then
			for i, v in pairs(plrs:GetPlayers()) do
				if v ~= lp then
					local c = v.Character
					if c and c.Parent then
						for i1, v1 in pairs(c:GetDescendants()) do
							if v1:IsA("BasePart") then
								v1.CanCollide = false
								v1.Velocity = v3_0
								v1.RotVelocity = v3_0
							end
						end
					end
				end
			end
		end
	end
	con0 = stepped:Connect(antiflingF)
	con1 = heartbeat:Connect(antiflingF)

	local antiattb = makeutilbutton("anti attach")
	local antiatt = false
	antiattb.MouseButton1Click:Connect(function()
		antiatt = not antiatt
		antiattb.Text = "anti attach" .. ((antiatt and " (Enabled)") or "")
	end)
	local charcon = nil
	local currentcon = nil
	local function onchar(c)
		if not gui then
			charcon:Disconnect()
			return
		end
		if typeof(c) ~= "Instance" then
			return
		end
		if currentcon then
			currentcon:Disconnect()
		end
		currentcon = c.ChildAdded:Connect(function(t)
			if not antiatt then
				return
			end
			if t:IsA("Tool") then
				local h = gp(t, "Handle", "BasePart") or t:FindFirstChildWhichIsA("BasePart")
				for i, v in pairs(h:GetConnectedParts()) do
					if not v:IsDescendantOf(c) then
						h:BreakJoints()
						stepped:Wait()
						if t and (t.Parent == c) then
							t.Parent = lp:FindFirstChildOfClass("Backpack") or ws
						end
						return
					end
				end
			end
		end)
	end
	onchar(lp.Character)
	charcon = lp.CharacterAdded:Connect(onchar)

	local netb = makeutilbutton("net bypass")
	local net = false
	netb.MouseButton1Click:Connect(function()
		if net then
			net = false
		else
			net = shp and function(Radius) 
				shp(lp, "SimulationRadius", Radius) 
			end
			net = net or ssr
			if not net then
				notify("exploit not supported")
			end
		end
		netb.Text = "net bypass" .. ((net and " (Enabled)") or "")
	end)

	makeutilbutton("rejoin").MouseButton1Click:Connect(function()
		if #plrs:GetPlayers() == 1 then
			lp:Kick()
			wait()
			g:GetService("TeleportService"):Teleport(g.PlaceId, lp)
		else
			g:GetService("TeleportService"):TeleportToPlaceInstance(g.PlaceId, g.JobId, lp)
		end
	end)

	makeutilbutton("serverhop").MouseButton1Click:Connect(function()
		local servers = nil
		pcall(function()
			servers = g:GetService("HttpService"):JSONDecode(g:HttpGetAsync("https://games.roblox.com/v1/games/" .. g.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data
		end)
		if type(servers) ~= "table" then
			notify("error getting server list")
			return
		end
		local jobIds = {}
		for i, v in pairs(servers) do
			if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= g.JobId then
				table.insert(jobIds, v.id)
			end
		end
		if #jobIds > 0 then
			g:GetService("TeleportService"):TeleportToPlaceInstance(g.PlaceId, jobIds[math.random(1, #jobIds)])
		else
			notify("no server found")
		end
	end)

	makeutilbutton("instant leave").MouseButton1Click:Connect(function()
		lp:Kick()
		wait()
		g:Shutdown()
	end)


	local cbringframe = makeFrame(scrollingFrame, "cbring", Color3.fromRGB(15, 100, 15))
	local cbringscroll = cbringframe.ScrollingFrame

	local cbring = {}

	local togglecbring = nil

	local function makecbringframe(name)
		local plrcbringf = Instance.new("Frame")
		local uncbringbtn = Instance.new("TextButton")
		local cbringplrname = Instance.new("TextBox")
		plrcbringf.Name = name
		plrcbringf.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
		plrcbringf.BorderSizePixel = 0
		plrcbringf.Size = UDim2.new(1, -10, 0, 30)
		plrcbringf.Parent = cbringscroll
		uncbringbtn.Name = "removeposbutton"
		uncbringbtn.Parent = plrcbringf
		uncbringbtn.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
		uncbringbtn.BorderSizePixel = 0
		uncbringbtn.Position = UDim2.new(1, -25, 0, 5)
		uncbringbtn.Size = UDim2.new(0, 20, 1, -10)
		uncbringbtn.Font = Enum.Font.SourceSans
		uncbringbtn.Text = "X"
		uncbringbtn.TextColor3 = Color3.fromRGB(223, 223, 223)
		uncbringbtn.TextSize = 16.000
		cbringplrname.Parent = plrcbringf
		cbringplrname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		cbringplrname.BackgroundTransparency = 1.000
		cbringplrname.BorderSizePixel = 0
		cbringplrname.Position = UDim2.new(0, 5, 0, 5)
		cbringplrname.Size = UDim2.new(1, -80, 1, -10)
		cbringplrname.Font = Enum.Font.SourceSans
		cbringplrname.Text = name
		cbringplrname.TextColor3 = Color3.fromRGB(0, 0, 0)
		cbringplrname.TextSize = 25.000
		cbringplrname.TextXAlignment = Enum.TextXAlignment.Left
		uncbringbtn.MouseButton1Click:Connect(function()
			togglecbring(name)
		end)
		return plrcbringf
	end

	togglecbring = function(name)
		local frame = gp(cbringscroll, name, "Frame")
		if frame then
			pcall(function()
				table.remove(cbring, table.find(cbring, name))
			end)
			frame:Destroy()
			notify("removed " .. name .. " from cbring")
		else
			table.insert(cbring, name)
			makecbringframe(name)
			notify("added " .. name .. " to cbring")
		end
	end

	cbringb.MouseButton1Click:Connect(function()
		togglecbring(currentplayer.Name)
	end)

	local cbringallbtn = Instance.new("TextButton")
	cbringallbtn.Name = "cbringallbtn"
	cbringallbtn.Parent = cbringframe.framelabel
	cbringallbtn.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
	cbringallbtn.BorderSizePixel = 0
	cbringallbtn.Position = UDim2.new(1, -57, 0, 2)
	cbringallbtn.Size = UDim2.new(0, 55, 1, -4)
	cbringallbtn.Font = Enum.Font.SourceSans
	cbringallbtn.Text = "+ add all"
	cbringallbtn.TextColor3 = Color3.fromRGB(206, 206, 206)
	cbringallbtn.TextSize = 14.000
	cbringallbtn.MouseButton1Click:Connect(function()
		for i, v in pairs(plrs:GetPlayers()) do
			if (v ~= lp) and v and v.Parent and (not table.find(cbring, v.Name)) then
				togglecbring(v.Name)
			end
		end
	end)

	spawn(function()
		while gui do
			local waited = false
			local lpc = lp.Character
			if lpc and lpc.Parent then
				local part0 = gp(lpc, "Torso", "BasePart") or gp(lpc, "HumanoidRootPart", "BasePart") or gp(lpc, "Head", "BasePart") or lpc:FindFirstChildWhichIsA("BasePart")
				if part0 then
					for i, v in pairs(plrs:GetPlayers()) do
						if v ~= lp then
							local c = v.Character
							if c and c.Parent then
								if table.find(cbring, v.Name) then
									local part1 = gp(c, part0.Name, "BasePart") or gp(c, "Torso", "BasePart") or gp(c, "HumanoidRootPart", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
									if part1 then
										local p1cf = part0.CFrame
										waited = true
										weldtp(part1, p1cf + p1cf.LookVector * 2)
									end
								end
							end
						end
					end
				end
			end
			if not waited then
				stepped:Wait()
			end
		end
	end)

	local con = nil
	con = stepped:Connect(function()
		if not gui then
			con:Disconnect()
			return
		end
		local lpc = lp.Character
		if noclip and lpc and lpc.Parent then
			for i, v in pairs(lpc:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		end
	end)

	gui.Enabled = true
	renderstepped:Wait()
	playercframe.Visible = false
end)



MainSection:NewButton("inf Yield", "Second best script ever!1!!11!", function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)




-- TROLL

local Troll = Window:NewTab("Troll")
local TrollSection = Troll:NewSection("Body resizes")



TrollSection:NewButton("Big R15", "Makes u big, u need certain bodytypes", function()
    --Shit ass script made by failedmite57926

local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character:FindFirstChildOfClass("Humanoid")

function rm()
	for i,v in pairs(Character:GetDescendants()) do
		if v:IsA("BasePart") then
			if v.Name == "Handle" or v.Name == "Head" then
				if Character.Head:FindFirstChild("OriginalSize") then
					Character.Head.OriginalSize:Destroy()
				end
			else
				for i,cav in pairs(v:GetDescendants()) do
					if cav:IsA("Attachment") then
						if cav:FindFirstChild("OriginalPosition") then
							cav.OriginalPosition:Destroy()  
						end
					end
				end
				v:FindFirstChild("OriginalSize"):Destroy()
				if v:FindFirstChild("AvatarPartScaleType") then
					v:FindFirstChild("AvatarPartScaleType"):Destroy()
				end
			end
		end
	end
end

rm()
wait(0.5)
Humanoid:FindFirstChild("BodyProportionScale"):Destroy()
wait(1)

rm()
wait(0.5)
Humanoid:FindFirstChild("BodyHeightScale"):Destroy()
wait(1)

rm()
wait(0.5)
Humanoid:FindFirstChild("BodyWidthScale"):Destroy()
wait(1)

rm()
wait(0.5)
Humanoid:FindFirstChild("BodyDepthScale"):Destroy()
wait(1)

rm()
wait(0.5)
Humanoid:FindFirstChild("HeadScale"):Destroy()
wait(1)
end)



TrollSection:NewButton("Small R15", "Makes u small, u need certain bodytypes", function()
    local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character:FindFirstChildOfClass("Humanoid")

local function rm()
	for i,v in pairs(Character:GetDescendants()) do
		if v:IsA("BasePart") then
			if v.Name ~= "Head" then
				for i,cav in pairs(v:GetDescendants()) do
					if cav:IsA("Attachment") then
						if cav:FindFirstChild("OriginalPosition") then
							cav.OriginalPosition:Destroy()
						end
					end
				end
				v:FindFirstChild("OriginalSize"):Destroy()
				if v:FindFirstChild("AvatarPartScaleType") then
					v:FindFirstChild("AvatarPartScaleType"):Destroy()
				end
			end
		end
	end
end

rm()
wait(0.5)
Humanoid:FindFirstChild("BodyTypeScale"):Destroy()
wait(1)

rm()
wait(0.5)
Humanoid:FindFirstChild("BodyWidthScale"):Destroy()
wait(1)

rm()
wait(0.5)
Humanoid:FindFirstChild("BodyDepthScale"):Destroy()
wait(1)

rm()
wait(0.5)
Humanoid:FindFirstChild("HeadScale"):Destroy()
wait(1)
end)



TrollSection:NewButton("Giant Legs R15", "Makes u have giant legs", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/DigitalityScripts/roblox-scripts/main/Leg%20Resize'))()
end)



TrollSection:NewButton("Hat Resize R15", "Makes ur hats massive only works with rthro hats", function()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "OriginalSize" then
            v:Destroy()
        end
    end
    game.Players.LocalPlayer.Character.Humanoid:FindFirstChild("BodyDepthScale"):Destroy()
    wait(1)
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "OriginalSize" then
            v:Destroy()
        end
    end
    game.Players.LocalPlayer.Character.Humanoid:FindFirstChild("BodyTypeScale"):Destroy()
    wait(1)
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "OriginalSize" then
            v:Destroy()
        end
    end
    game.Players.LocalPlayer.Character.Humanoid:FindFirstChild("HeadScale"):Destroy()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "OriginalSize" then
            v:Destroy()
        end
    end
    game.Players.LocalPlayer.Character.Humanoid:FindFirstChild("BodyHeightScale"):Destroy()
    wait(1)
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "OriginalSize" then
            v:Destroy()
        end
    end
    game.Players.LocalPlayer.Character.Humanoid:FindFirstChild("BodyWidthScale"):Destroy()
    wait(1)
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "OriginalSize" then
            v:Destroy()
        end
    end
    game.Players.LocalPlayer.Character.Humanoid:FindFirstChild("BodyProportionScale"):Destroy()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "OriginalSize" then
            v:Destroy()
        end
    end
end)



local MainSection = Main:NewSection("Tools")
MainSection:NewButton("Tool duper", "Dupe tools", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/PBNaUS1J'))()
end)


MainSection:NewButton("Tool giver", "Give tools", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/Fj8KWmLC'))()
end)


local TrollSection = Troll:NewSection("Other")
TrollSection:NewButton("OPFinality", "Troll gui", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/bk5J4cyc'))()
end)



TrollSection:NewButton("Detach ur body R15", "Also makes ur jacket bug out if u have one equipped", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/ant-7802/--/main/get.real'))()
end)




TrollSection:NewButton("Audio fucker", "Red = client sided  Green = server sided ", function()
local ScreenGui = Instance.new("ScreenGui")
local Draggable = Instance.new("Frame")
local Frame = Instance.new("Frame")
local Frame_2 = Instance.new("Frame")
local Time = Instance.new("TextLabel")
local _1E = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local _3E = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local SE = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local Path = Instance.new("TextLabel")
local Top = Instance.new("Frame")
local Top_2 = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local TextLabel = Instance.new("TextLabel")
local Exit = Instance.new("TextButton")
local Minizum = Instance.new("TextButton")
local Stop = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local IY = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local TextLabel_2 = Instance.new("TextLabel")
local Wait = Instance.new("TextBox")

--Properties:

ScreenGui.Name = ". Ǥ҉̷҉̵҉̸҉̷҉̵҉̸҉̡҉̡҉̼҉̱҉͎҉͎҉̞҉̼҉̱҉͎҉͎҉̞҉ͤ҉ͬ҉̅҉ͤ҉ͬ"
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

Draggable.Name = "Ǥ҉̷҉̵҉̸҉̷҉̵҉̸҉̡҉̡҉̼҉̱҉͎҉͎҉̞҉̼҉̱҉͎҉͎҉̞҉ͤ҉ͬ҉̅҉ͤ҉ͬ."
Draggable.Parent = ScreenGui
Draggable.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Draggable.BackgroundTransparency = 1.000
Draggable.BorderSizePixel = 0
Draggable.Position = UDim2.new(0.35026139, 0, 0.296158612, 0)
Draggable.Size = UDim2.new(0, 438, 0, 277)

Frame.Name = ". . Ǥ҉̷҉̵҉̸҉̷҉̵҉̸҉̡҉̡҉̼҉̱҉͎҉͎҉̞҉̼҉̱҉͎҉͎҉̞҉ͤ҉ͬ҉̅҉ͤ҉ͬ. "
Frame.Parent = Draggable
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 1.000
Frame.BorderColor3 = Color3.fromRGB(27, 42, 53)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(-0.00133678317, 0, -0.00348037481, 0)
Frame.Size = UDim2.new(0, 438, 0, 277)

Frame_2.Name = " . Ǥ҉̷҉̵҉̸҉̷҉̵҉̸҉̡҉̡҉̼҉̱҉͎҉͎҉̞҉̼҉̱҉͎҉͎҉̞҉ͤ҉ͬ҉̅҉ͤ҉ͬ. "
Frame_2.Parent = Frame
Frame_2.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(-0.00133678142, 0, -0.0179207586, 0)
Frame_2.Size = UDim2.new(0, 438, 0, 238)
Frame_2.Active = true
Frame_2.Draggable = true

Time.Name = "Time"
Time.Parent = Frame_2
Time.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Time.BackgroundTransparency = 1.000
Time.Position = UDim2.new(0, 0, 0.0126050422, 0)
Time.Size = UDim2.new(0, 437, 0, 31)
Time.Font = Enum.Font.GothamSemibold
Time.Text = "RespectFilteringEnabled(RFE) : nil"
Time.TextColor3 = Color3.fromRGB(255, 255, 255)
Time.TextScaled = true
Time.TextSize = 14.000
Time.TextWrapped = true

_1E.Name = "1E"
_1E.Parent = Frame_2
_1E.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
_1E.BorderSizePixel = 0
_1E.Position = UDim2.new(0.0182648394, 0, 0.676470578, 0)
_1E.Size = UDim2.new(0, 208, 0, 33)
_1E.Font = Enum.Font.SourceSans
_1E.Text = "Mute Game"
_1E.TextColor3 = Color3.fromRGB(255, 255, 255)
_1E.TextScaled = true
_1E.TextSize = 30.000
_1E.TextWrapped = true

UICorner.Parent = _1E

_3E.Name = "3E"
_3E.Parent = Frame_2
_3E.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
_3E.BorderSizePixel = 0
_3E.Position = UDim2.new(0.0159817357, 0, 0.142857149, 0)
_3E.Size = UDim2.new(0, 209, 0, 33)
_3E.Font = Enum.Font.SourceSans
_3E.Text = "Annoying  Sound"
_3E.TextColor3 = Color3.fromRGB(255, 255, 255)
_3E.TextSize = 30.000
_3E.TextWrapped = true

UICorner_2.Parent = _3E

SE.Name = "SE"
SE.Parent = Frame_2
SE.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
SE.BorderSizePixel = 0
SE.Position = UDim2.new(0.509132445, 0, 0.142857149, 0)
SE.Size = UDim2.new(0, 209, 0, 33)
SE.Font = Enum.Font.SourceSans
SE.Text = "Kill Sound Service"
SE.TextColor3 = Color3.fromRGB(255, 255, 255)
SE.TextSize = 30.000
SE.TextWrapped = true

UICorner_3.Parent = SE

Path.Name = "Path"
Path.Parent = Frame_2
Path.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Path.BackgroundTransparency = 1.000
Path.Position = UDim2.new(0.00684931502, 0, 0.815126061, 0)
Path.Size = UDim2.new(0, 435, 0, 44)
Path.Font = Enum.Font.GothamSemibold
Path.Text = "Dev Note : This Script is FE and it only FE when RespectFilteringEnabled(RFE) is disabled , elseif RespectFilteringEnabled(RFE) is true then it only be client , mostly RespectFilteringEnabled(RFE) disabled game are classic game Yield#1111"
Path.TextColor3 = Color3.fromRGB(255, 0, 0)
Path.TextScaled = true
Path.TextSize = 14.000
Path.TextWrapped = true

Top.Name = "Top"
Top.Parent = Frame_2
Top.BackgroundColor3 = Color3.fromRGB(41, 60, 157)
Top.BorderColor3 = Color3.fromRGB(27, 42, 53)
Top.BorderSizePixel = 0
Top.Position = UDim2.new(-0.00133678142, 0, -0.128059402, 0)
Top.Size = UDim2.new(0, 438, 0, 30)
Top_2.Name = "Top"
Top_2.Parent = Top
Top_2.BackgroundColor3 = Color3.fromRGB(30, 45, 118)
Top_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
Top_2.BorderSizePixel = 0
Top_2.Position = UDim2.new(0, 0, 0.967638671, 0)
Top_2.Size = UDim2.new(0, 438, 0, 5)

ImageLabel.Parent = Top
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.Position = UDim2.new(0, 0, 0.0666666701, 0)
ImageLabel.Size = UDim2.new(0, 29, 0, 27)
ImageLabel.Image = "http://www.roblox.com/asset/?id=8798286232"

TextLabel.Parent = ImageLabel
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.997245014, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 397, 0, 30)
TextLabel.Font = Enum.Font.GothamSemibold
TextLabel.Text = "FEAG"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextWrapped = true

Exit.Name = "Exit"
Exit.Parent = Top
Exit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Exit.BackgroundTransparency = 1.000
Exit.Position = UDim2.new(0.924657524, 0, 0, 0)
Exit.Size = UDim2.new(0, 32, 0, 25)
Exit.Font = Enum.Font.GothamSemibold
Exit.Text = "x"
Exit.TextColor3 = Color3.fromRGB(255, 255, 255)
Exit.TextScaled = true
Exit.TextSize = 14.000
Exit.TextWrapped = true

Minizum.Name = "Minizum"
Minizum.Parent = Top
Minizum.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Minizum.BackgroundTransparency = 1.000
Minizum.Position = UDim2.new(0.851598203, 0, 0, 0)
Minizum.Size = UDim2.new(0, 32, 0, 23)
Minizum.Font = Enum.Font.GothamSemibold
Minizum.Text = "_"
Minizum.TextColor3 = Color3.fromRGB(255, 255, 255)
Minizum.TextScaled = true
Minizum.TextSize = 14.000
Minizum.TextWrapped = true

Stop.Name = "Stop"
Stop.Parent = Frame_2
Stop.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Stop.BorderSizePixel = 0
Stop.Position = UDim2.new(0.0182648394, 0, 0.310924381, 0)
Stop.Size = UDim2.new(0, 424, 0, 33)
Stop.Font = Enum.Font.SourceSans
Stop.Text = "Stop"
Stop.TextColor3 = Color3.fromRGB(255, 255, 255)
Stop.TextSize = 30.000
Stop.TextWrapped = true

UICorner_4.Parent = Stop

IY.Name = "IY"
IY.Parent = Frame_2
IY.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
IY.BorderSizePixel = 0
IY.Position = UDim2.new(0.509132445, 0, 0.676470578, 0)
IY.Size = UDim2.new(0, 209, 0, 33)
IY.Font = Enum.Font.SourceSans
IY.Text = "Unmute Game"
IY.TextColor3 = Color3.fromRGB(255, 255, 255)
IY.TextScaled = true
IY.TextSize = 30.000
IY.TextWrapped = true

UICorner_5.Parent = IY

TextLabel_2.Parent = Frame_2
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Position = UDim2.new(0.0182648394, 0, 0.466386557, 0)
TextLabel_2.Size = UDim2.new(0, 426, 0, 50)
TextLabel_2.Font = Enum.Font.GothamSemibold
TextLabel_2.Text = "Wait Speed       :"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 30.000
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

Wait.Name = "Wait()"
Wait.Parent = Frame_2
Wait.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Wait.BackgroundTransparency = 1.000
Wait.Position = UDim2.new(0.531963468, 0, 0.466386557, 0)
Wait.Size = UDim2.new(0, 199, 0, 50)
Wait.ZIndex = 99999
Wait.ClearTextOnFocus = false
Wait.Font = Enum.Font.GothamSemibold
Wait.Text = "0.5"
Wait.TextColor3 = Color3.fromRGB(255, 255, 255)
Wait.TextSize = 30.000
Wait.TextWrapped = true

--Sound Service:
local notification = Instance.new("Sound")
notification.Parent = game:GetService("SoundService")
notification.SoundId = "rbxassetid://9086208751"
notification.Volume = 5
notification.Name = ". Ǥ҉̷҉̵҉̸҉̷҉̵҉̸҉̡҉̡҉̼҉̱҉͎҉͎҉̞҉̼҉̱҉͎҉͎҉̞҉ͤ҉ͬ҉̅҉ͤ҉ͬ"

--funuction:
Exit.MouseButton1Click:Connect(function()
	ScreenGui:Destroy()
end)
local Mute = false
IY.MouseButton1Click:Connect(function()
	Mute = false
end)

_1E.MouseButton1Click:Connect(function()
	Mute = true
	while Mute == true do 
		wait()
		for _, sound in next, workspace:GetDescendants() do
			if sound:IsA("Sound") then
				sound:Stop()
			end
		end
	end
end)

_3E.MouseButton1Click:Connect(function()
	for _, sound in next, workspace:GetDescendants() do
		if sound:IsA("Sound") then
			sound:Play()
		end
	end
end)

local Active = true
SE.MouseButton1Click:Connect(function()
	Active = true
	while Active == true do
		local StringValue = Wait.Text
		wait(StringValue)
		for _, sound in next, workspace:GetDescendants() do
			if sound:IsA("Sound") then
				sound:Play()
			end
		end
	end
end)

Stop.MouseButton1Click:Connect(function()
	Active = false
end)
--Credit:
notification:Play()
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "FEAG";
	Text = "FEAG Has Been Loaded , Made By Scripty#2063 (gamer14_123)";
	Icon = "";
	Duration = 10; 
	Button1 = "Yes Sir";
})
--Check:
while true do
	wait(0.5)
	local setting = game:GetService("SoundService").RespectFilteringEnabled
	if setting == true then
		Time.TextColor = BrickColor.new(255,0,0)
		Time.Text ="RespectFilteringEnabled(RFE) : true"
	elseif setting == false then
		Time.Text ="RespectFilteringEnabled(RFE) : false"
		Time.TextColor = BrickColor.new(0,255,0)
	end
end
end)




TrollSection:NewButton("Chat Bypasser", "Can bypass pretty much every word", function()
    loadstring(game:HttpGet("https://the-shed.dev/scripts/sbp.lua", true))()
end)




TrollSection:NewButton("Tp Unanchored blocks", "u can tp unanchored blocks to any player sometimes on client sided ", function()
    --TOMQ-SCRIPT-2020
-- prevent from being ran more than once


if not _G.ini then
    _G.ini = true
    
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://216917652"
    sound.Parent = game:GetService("SoundService")
    sound:Play()
    
    
    
    wait()
    game.StarterGui:SetCore("SendNotification", {
    Title = "Unanchored To Player"; -- the title (ofc)
    Text = "GUI Loaded - F to Hide/Show"; -- what the text says (ofc)
    Duration = 5; -- how long the notification should in secounds
    })
    
    print "================UNANCHORED TO PLAYER LOADED================"
    print "================Script gui made by Yield#1111, script itself made by TomQ#6764================"
    
    local heartbeat = game:GetService("RunService").Heartbeat
    spawn(function()
        while true do heartbeat:Wait()
        for i,v in pairs(game.Players:GetPlayers()) do
            if v == game.Players.LocalPlayer == false then
                game.Players.LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)*math.huge
                game.Players.LocalPlayer.SimulationRadius = math.pow(math.huge,math.huge)*math.huge
                v.MaximumSimulationRadius = 0
                v.SimulationRadius = 0
                game:GetService("RunService").Stepped:wait()
        end
    end
    end
    end)
    
    local Imput = game:GetService("UserInputService")
    local Plr = game.Players.LocalPlayer
    local Mouse = Plr:GetMouse()
    
    function To(position)
    local Chr = Plr.Character
    local sound2 = Instance.new("Sound")
    sound2.SoundId = "rbxassetid://3398620867"
    sound2.Parent = game:GetService("SoundService")
    if Chr ~= nil then
    for index, part in pairs(game:GetDescendants()) do
    if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then --// Checks Part Properties
        part.CFrame = CFrame.new(position) --TP Part To Mouse
        sound2:Play()
    
        if spam == true and part:FindFirstChild("BodyGyro") == nil then
        local bodyPos = Instance.new("BodyPosition")
        bodyPos.Position = part.Position
        bodyPos.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyPos.P = 1e6
        bodyPos.Parent = part
        end
    end
    end
    end
    end
    
    
    
    
    
    Imput.InputBegan:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 and Imput:IsKeyDown(Enum.KeyCode.LeftControl) then
           To(Mouse.Hit.p)
       end
    end)
    
    
    
    
    
    
    
    -- key that opens/closes the ui
    local toggle_key = Enum.KeyCode.F
    
    -- function that executes desired code
    execute = function(name)
    
    
    
        for index, part in pairs(game:GetDescendants()) do
        if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then --// Checks Part Properties
        part.CFrame = CFrame.new(game.workspace[name].Head.Position) --TP Part To User
        end
        end
    
    
    
    end
    
    local uis = game:GetService("UserInputService")
    local ts = game:GetService("TweenService")
    
    -- ui functions
    fade = function(obj, len, props)
        ts:Create(obj, TweenInfo.new(len, Enum.EasingStyle.Sine), props):Play()
    end
    
    -- shorthand variables
    local u2, c3 = UDim2.new, Color3.fromRGB
    local u2f, c3w = u2(1, 0, 1, 0), c3(255, 255, 255)
    
    -- ui init
    local g = Instance.new("ScreenGui", game.CoreGui)
    local f = Instance.new("Frame", g)
    local t = Instance.new("TextLabel", f)
    local c = Instance.new("ScrollingFrame", f)
    
    -- core ui styling
    local padding = Instance.new("UIPadding", f)
    local maxsize = Instance.new("UISizeConstraint", f)
    local textsize = Instance.new("UITextSizeConstraint", t)
    local listcons = Instance.new("UIListLayout", c)
    
    padding.PaddingBottom = UDim.new(0, 8)
    padding.PaddingLeft = UDim.new(0, 15)
    padding.PaddingRight = UDim.new(0, 15)
    padding.PaddingTop = UDim.new(0, 0)
    
    maxsize.MaxSize = Vector2.new(275, 450)
    maxsize.MinSize = Vector2.new(200, 0)
    textsize.MaxTextSize = 16
    listcons.Padding = UDim.new(0, 3)
    
    -- ui instance properties
    g.Name = "unanchor_ui"
    g.ResetOnSpawn = false
    f.Name = "main"
    t.Name = "header"
    
    f.Size = u2(0.165, 0, 0.6, 0)
    f.BorderSizePixel = 0
    f.BackgroundTransparency = 0.3
    f.Position = u2(1, -215, 0.5, -150)
    f.BackgroundColor3 = c3()
    f.AnchorPoint = Vector2.new(1, 0.5)
    f.Position = u2(1, -15, 0.5, 0)
    
    t.Size = u2(1, 0, 0.1, 0)
    t.BackgroundTransparency = 1
    t.TextColor3 = c3w
    t.Font = Enum.Font.GothamBold
    t.TextScaled = true
    t.TextXAlignment = Enum.TextXAlignment.Center
    t.Text = "Script gui made by Yield#1111 Script itself made by TomQ#6764"
    
    c.Name = "playerlist"
    c.Position = u2(0, 0, 0.1, 0)
    c.Size = u2(1, 0, 0.45, 0)
    c.BackgroundTransparency = 1
    c.BorderSizePixel = 0
    c.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
    c.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
    c.ScrollingDirection = Enum.ScrollingDirection.Y
    c.ScrollBarThickness = 5
    c.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
    
    -- playerlist entry ui template
    local temp = Instance.new("Frame", f)
    temp.Name = "temp"
    temp.Visible = false
    temp.Size = u2(1, -5, 0, 27)
    temp.BackgroundTransparency = 0.5
    temp.BorderSizePixel = 0
    temp.ClipsDescendants = true
    temp.BackgroundColor3 = c3()
    
    local tpad = Instance.new("UIPadding", temp)
    tpad.PaddingLeft = UDim.new(0, 5)
    tpad.PaddingRight = UDim.new(0, 5)
    
    local tb = Instance.new("TextButton", temp)
    tb.Name = "button"
    tb.BackgroundTransparency = 1
    tb.ZIndex = 5
    tb.BorderSizePixel = 0
    tb.Text = ""
    tb.Size = u2(1, 10, 1, 0)
    tb.Position = u2(0, -5, 0, 0)
    
    local tcl = Instance.new("TextLabel", temp)
    tcl.Name = "username"
    tcl.BackgroundTransparency = 1
    tcl.BorderSizePixel = 0
    tcl.Size = u2f
    tcl.TextColor3 = c3w
    tcl.TextXAlignment = Enum.TextXAlignment.Left
    tcl.TextScaled = true
    tcl.Size = u2(0.6, 0, 1, 0)
    tcl.Font = Enum.Font.Gotham
    
    local tcls = Instance.new("UITextSizeConstraint", tcl)
    tcls.MaxTextSize = 14
    
    local thumb = Instance.new("ImageLabel", temp)
    thumb.Name = "thumb"
    thumb.Size = u2(0.35, 0, 0.35, 0)
    thumb.SizeConstraint = Enum.SizeConstraint.RelativeXX
    thumb.Position = u2(1, 0, 0, -15)
    thumb.AnchorPoint = Vector2.new(1, 0)
    thumb.BackgroundTransparency = 1
    thumb.BorderSizePixel = 0
    
    -- settings ui
    local sh = Instance.new("TextLabel", f)
    sh.Name = "settings_header"
    sh.Size = u2(1, 0, 0.1, 0)
    sh.Position = u2(0, 0, 0.55, 0)
    sh.BackgroundTransparency = 1
    sh.BorderSizePixel = 0
    sh.ZIndex = 3
    sh.TextColor3 = c3w
    sh.Font = Enum.Font.GothamBold
    sh.TextScaled = true
    sh.TextXAlignment = Enum.TextXAlignment.Center
    sh.Text = "SETTINGS"
    
    local shs = Instance.new("UITextSizeConstraint", sh)
    shs.MaxTextSize = 16
    
    local items = Instance.new("ScrollingFrame", f)
    items.Name = "items"
    items.Size = u2(1, 0, 0.35, 0)
    items.Position = u2(0, 0, 0.65, 0)
    items.BackgroundTransparency = 1
    items.BorderSizePixel = 0
    items.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
    items.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
    items.ScrollingDirection = Enum.ScrollingDirection.Y
    items.ScrollBarThickness = 5
    items.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
    
    local itemll = Instance.new("UIListLayout", items)
    itemll.Padding = UDim.new(0, 3)
    
    createSetting = function(name)
        local setting = Instance.new("Frame", items)
        setting.Size = u2(1, -5, 0, 27)
        setting.BackgroundColor3 = c3()
        setting.BackgroundTransparency = 0.5
        setting.BorderSizePixel = 0
        
        local spad = tpad:Clone()
        spad.Parent = setting
        
        local slab = tcl:Clone()
        slab.Name = "label"
        slab.Parent = setting
        slab.Size = u2(1, 0, 1, 0)
        slab.Text = name
        
        local stbt = tb:Clone()
        stbt.Parent = setting
        
        stbt.MouseEnter:connect(function()
            fade(setting, 0.25, {BackgroundTransparency = 0.8})
        end)
        
        stbt.MouseLeave:connect(function()
            fade(setting, 0.25, {BackgroundTransparency = 0.5})
        end)
        
        items.CanvasSize = u2(0, 0, 0, itemll.AbsoluteContentSize.Y)
        
        return stbt
    end
    
    
    -- settings & functionality
    
    
    
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://179235828"
        sound.Parent = game:GetService("SoundService")
    
    
    spam = false
    local spamblocks = createSetting("Spam Parts")
    spamblocks.MouseButton1Down:connect(function()
    spam = not spam
       if spam then
           fade(spamblocks.Parent.label, 0.25, {TextColor3 = c3(52, 189, 98)})
           sound:Play()
           -- code to loop here
       else
           fade(spamblocks.Parent.label, 0.25, {TextColor3 = c3w})
           sound:Play()
           -- code to break the loop here
       end
    end)
    
    
    
    createSetting("Break Spam").MouseButton1Down:connect(function()
        for index, part in pairs(game:GetDescendants()) do
        if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then --// Checks Part Properties
        sound:Play()
        if part:FindFirstChild("BodyForce") then
        part.BodyForce:Destroy()
        end
    
        if part:FindFirstChild("BodyGyro") then
        part.BodyGyro:Destroy()
        end
    
        if part:FindFirstChild("BodyPosition") then
        part.BodyPosition:Destroy()
        end
    
        if part:FindFirstChild("BodyThrust") then
        part.BodyThrust:Destroy()
        end
    end
    end
    end)
    
    freeze = false
    local freezeblocks = createSetting("Freeze Parts")
    freezeblocks.MouseButton1Down:connect(function()
    freeze = not freeze
        if freeze then
            fade(freezeblocks.Parent.label, 0.25, {TextColor3 = c3(52, 189, 98)})
            sound:Play()
            print "UTP: Freezed Parts"
            for _,part in pairs(workspace:GetChildren()) do
            if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then --// Checks Part Properties
                local bodyPos = Instance.new("BodyPosition")
                bodyPos.Position = part.Position
                bodyPos.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bodyPos.P = 1e6
                bodyPos.Parent = part
            end
            end
        else
            fade(freezeblocks.Parent.label, 0.25, {TextColor3 = c3w})
            sound:Play()
            print "UTP: Thawed Parts"
            for _,part in pairs(workspace:GetChildren()) do
            if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then --// Checks Part Properties
                if part:FindFirstChild("BodyPosition") then
                part.BodyPosition:Destroy()
                end
            end
           -- code to break the loop here
    end
    end
    end)
    
    createSetting("Remove Accessories Mesh").MouseButton1Down:connect(function()
        sound:Play()
    
        local plr = game:GetService("Players").LocalPlayer
        local char = plr.Character
        for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Accessory") and v.Handle:FindFirstChild("SpecialMesh") then
        ag = v.Handle:FindFirstChild("SpecialMesh")
        ag:Destroy()
        end
        end
    
    
        local plr = game:GetService("Players").LocalPlayer
        local char = plr.Character
        for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Accessory") and v.Handle:FindFirstChild("Mesh") then
        ag = v.Handle:FindFirstChild("Mesh")
        ag:Destroy()
        end
        end
    end)
    
    createSetting("Drop Accessories").MouseButton1Down:connect(function()
        sound:Play()
        for _,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:IsA("Accessory") then
                v.Handle.Parent = workspace
                v.Parent = workspace
            end
        end
    end)
    
    createSetting("Reset").MouseButton1Down:connect(function()
        sound:Play()
        game.Players.LocalPlayer.Character:BreakJoints()
    end)
    
    
    highlight = false
    local highlights = createSetting("Highlight Unanchored")
    highlights.MouseButton1Down:connect(function()
    highlight = not highlight
        if highlight then
            fade(highlights.Parent.label, 0.25, {TextColor3 = c3(52, 189, 98)})
            sound:Play()
            print "UTP: Unanchored Highlighted"
            for _,part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false and part:FindFirstChild("Weld") == nil then --// Checks Part Properties
                local selectionBox = Instance.new("SelectionBox")
                selectionBox.Adornee = part
                selectionBox.Color3 = Color3.new(1,0,0)
                selectionBox.Parent = part
            end
            end
        else
            fade(highlights.Parent.label, 0.25, {TextColor3 = c3w})
            sound:Play()
            print "UTP: Unanchored Un-Highlighted"
            for _,part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false and part:FindFirstChild("Weld") == nil then --// Checks Part Properties
                if part:FindFirstChild("SelectionBox") then
                part.SelectionBox:Destroy()
                end
            end
    end
    end
    end)
    
    createSetting("Check Other Players").MouseButton1Down:connect(function()
        sound:Play()
        g = 0
        spawn(function()
            for i,v in pairs(game.Players:GetPlayers()) do
                if v.SimulationRadius > 5555 then
                    g = g + 1
                    print(v.Name, "is using Unanchored To Player")
                    game:GetService("RunService").Stepped:wait()
                    
            end
        end
        print ("Checked all players, found", g ,"using Unanchored To Player")
        end)
    end)
    
    createSetting("Count Unanchored Parts").MouseButton1Down:connect(function()
        sound:Play()
        b = 0
        for index, part in pairs(game.workspace:GetDescendants()) do
        if part:IsA("BasePart") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false and part:FindFirstChild("Weld") == nil then --// Checks Part Properties
            b = b + 1
        end
        end
        print ("All parts checked, found", b ,"that are unanchored")
    end)
    
    
    
    
    
    
    
    
    createEntry = function(name, id)
        local entry = temp:Clone()
        entry.Parent = c
        entry.username.Text = name
        entry.thumb.Image = game:GetService("Players"):GetUserThumbnailAsync(id, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100)
        entry.Visible = true
        entry.LayoutOrder = #c:GetChildren()
        entry.Name = name
    
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://3398620867"
        sound.Parent = game:GetService("SoundService")
        -- handle clicking for player
        entry.button.MouseButton1Down:connect(function()
            execute(name)
            sound:Play()
        end)
        
        entry.button.MouseEnter:connect(function()
            fade(entry, 0.25, {BackgroundTransparency = 0.8})
        end)
        
        entry.button.MouseLeave:connect(function()
            fade(entry, 0.25, {BackgroundTransparency = 0.5})
        end)
    end
    
    deleteEntry = function(name)
        for _,v in pairs(c:GetChildren()) do
            if v.Name == name then
                v:Destroy()
            end
        end
    end
    
    -- create entry for client
    createEntry(game.Players.LocalPlayer.Name, game.Players.LocalPlayer.UserId)
    
    -- create entries for all other players
    for _,v in pairs(game.Players:GetPlayers()) do
        if v ~= game.Players.LocalPlayer then
            createEntry(v.Name, v.UserId)
        end
    end
    
    listcons:GetPropertyChangedSignal("AbsoluteContentSize"):connect(function()
        c.CanvasSize = u2(0, 0, 0, listcons.AbsoluteContentSize.Y)
    end)
    
    itemll:GetPropertyChangedSignal("AbsoluteContentSize"):connect(function()
        items.CanvasSize = u2(0, 0, 0, itemll.AbsoluteContentSize.Y)
    end)
    
    uis.InputBegan:connect(function(input, gpe)
        if not gpe then
            if input.KeyCode == toggle_key then
                g.Enabled = not g.Enabled
            end
        end
    end)
    
    -- dragging code, ripped from https://devforum.roblox.com/t/draggable-property-is-hidden-on-gui-objects/107689/5
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        f.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    f.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = f.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    f.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    uis.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
    
    game.Players.PlayerAdded:connect(function(plr)
        createEntry(plr.Name, plr.UserId)
    end)
    
    game.Players.PlayerRemoving:connect(function(plr)
        deleteEntry(plr.Name)
    end)
    else
    print "================ALREADY LOADED================"
    
    
    
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://2130284653"
        sound.Parent = game:GetService("SoundService")
    sound:Play()
    
    game.StarterGui:SetCore("SendNotification", {
    Title = "Already Loaded"; -- the title (ofc)
    Text = "GUI Already Loaded"; -- what the text says (ofc)
    Duration = 5; -- how long the notification should in secounds
    })
    end
end)




TrollSection:NewButton("Ultimate fling", "OP Fling", function()
    local ultimateFling = Instance.new("ScreenGui")
local drag = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local windowNameFrame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local windowNameLabel = Instance.new("TextLabel")
local closeButton = Instance.new("TextButton")
local mainFrame = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local buttonsFrame = Instance.new("Frame")
local toggleButton = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local rotSpeedLabel = Instance.new("TextLabel")
local UICorner_5 = Instance.new("UICorner")
local rotSpeedTextbox = Instance.new("TextBox")
local flySpeedLabel = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local flySpeedTextbox = Instance.new("TextBox")
local UICorner_7 = Instance.new("UICorner")
local notificationsFrame = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local notificationTemplate = Instance.new("TextLabel")
local teleportersFrame = Instance.new("Frame")
local teleportingLabel = Instance.new("TextLabel")
local UICorner_8 = Instance.new("UICorner")
local tpingTextbox = Instance.new("TextBox")

ultimateFling.Name = "ultimateFling"
ultimateFling.Parent = game:GetService("CoreGui")
ultimateFling.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ultimateFling.ResetOnSpawn = false

drag.Name = "drag"
drag.Parent = ultimateFling
drag.Active = true
drag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
drag.BackgroundTransparency = 1.000
drag.Draggable = true
drag.Position = UDim2.new(0.5, -150, 0.5, -67)
drag.Selectable = true
drag.Size = UDim2.new(0, 300, 0, 135)

UICorner.Parent = drag

windowNameFrame.Name = "windowNameFrame"
windowNameFrame.Parent = drag
windowNameFrame.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
windowNameFrame.Size = UDim2.new(1, 0, 0, 30)

UICorner_2.Parent = windowNameFrame

windowNameLabel.Name = "windowNameLabel"
windowNameLabel.Parent = windowNameFrame
windowNameLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
windowNameLabel.BackgroundTransparency = 1.000
windowNameLabel.BorderSizePixel = 0
windowNameLabel.Size = UDim2.new(1, 0, 0, 20)
windowNameLabel.Font = Enum.Font.SourceSans
windowNameLabel.Text = "Ultimate Fling"
windowNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
windowNameLabel.TextSize = 20.000

closeButton.Name = "closeButton"
closeButton.Parent = windowNameLabel
closeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
closeButton.BackgroundTransparency = 1.000
closeButton.BorderSizePixel = 0
closeButton.Position = UDim2.new(1, -20, 0, 0)
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Font = Enum.Font.SourceSans
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 0, 0)
closeButton.TextSize = 20.000

mainFrame.Name = "mainFrame"
mainFrame.Parent = drag
mainFrame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
mainFrame.Position = UDim2.new(0, 0, 0, 20)
mainFrame.Size = UDim2.new(1, 0, 1, -20)

UICorner_3.Parent = mainFrame

buttonsFrame.Name = "buttonsFrame"
buttonsFrame.Parent = mainFrame
buttonsFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
buttonsFrame.BackgroundTransparency = 0.500
buttonsFrame.Size = UDim2.new(0, 110, 1, 0)

toggleButton.Name = "toggleButton"
toggleButton.Parent = buttonsFrame
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundTransparency = 0.800
toggleButton.BorderSizePixel = 0
toggleButton.Position = UDim2.new(0, 5, 0, 5)
toggleButton.Size = UDim2.new(0, 100, 0, 25)
toggleButton.Font = Enum.Font.SourceSans
toggleButton.Text = "Start fling"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 20.000

UICorner_4.Parent = toggleButton

rotSpeedLabel.Name = "rotSpeedLabel"
rotSpeedLabel.Parent = buttonsFrame
rotSpeedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
rotSpeedLabel.BackgroundTransparency = 0.800
rotSpeedLabel.Position = UDim2.new(0, 5, 0, 35)
rotSpeedLabel.Size = UDim2.new(0, 100, 0, 35)
rotSpeedLabel.Font = Enum.Font.SourceSans
rotSpeedLabel.Text = "RotSpeed"
rotSpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
rotSpeedLabel.TextSize = 14.000
rotSpeedLabel.TextYAlignment = Enum.TextYAlignment.Top

UICorner_5.Parent = rotSpeedLabel

rotSpeedTextbox.Name = "rotSpeedTextbox"
rotSpeedTextbox.Parent = rotSpeedLabel
rotSpeedTextbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
rotSpeedTextbox.BackgroundTransparency = 1.000
rotSpeedTextbox.Position = UDim2.new(0, 0, 0, 13)
rotSpeedTextbox.Size = UDim2.new(1, 0, 1, -13)
rotSpeedTextbox.ClearTextOnFocus = false
rotSpeedTextbox.Font = Enum.Font.SourceSans
rotSpeedTextbox.Text = "10000"
rotSpeedTextbox.TextColor3 = Color3.fromRGB(0, 255, 0)
rotSpeedTextbox.TextSize = 16.000

flySpeedLabel.Name = "flySpeedLabel"
flySpeedLabel.Parent = buttonsFrame
flySpeedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
flySpeedLabel.BackgroundTransparency = 0.800
flySpeedLabel.Position = UDim2.new(0, 5, 0, 75)
flySpeedLabel.Size = UDim2.new(0, 100, 0, 35)
flySpeedLabel.Font = Enum.Font.SourceSans
flySpeedLabel.Text = "FlySpeed"
flySpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
flySpeedLabel.TextSize = 14.000
flySpeedLabel.TextYAlignment = Enum.TextYAlignment.Top

UICorner_6.Parent = flySpeedLabel

flySpeedTextbox.Name = "flySpeedTextbox"
flySpeedTextbox.Parent = flySpeedLabel
flySpeedTextbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
flySpeedTextbox.BackgroundTransparency = 1.000
flySpeedTextbox.Position = UDim2.new(0, 0, 0, 13)
flySpeedTextbox.Size = UDim2.new(1, 0, 1, -13)
flySpeedTextbox.ClearTextOnFocus = false
flySpeedTextbox.Font = Enum.Font.SourceSans
flySpeedTextbox.Text = "1"
flySpeedTextbox.TextColor3 = Color3.fromRGB(0, 255, 0)
flySpeedTextbox.TextSize = 16.000

UICorner_7.Parent = buttonsFrame

notificationsFrame.Name = "notificationsFrame"
notificationsFrame.Parent = mainFrame
notificationsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
notificationsFrame.BackgroundTransparency = 1.000
notificationsFrame.ClipsDescendants = true
notificationsFrame.Position = UDim2.new(0, 110, 0, 45)
notificationsFrame.Size = UDim2.new(1, -110, 1, -45)

UIListLayout.Parent = notificationsFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom

notificationTemplate.Name = "notificationTemplate"
notificationTemplate.Parent = notificationsFrame
notificationTemplate.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
notificationTemplate.BackgroundTransparency = 1.000
notificationTemplate.ClipsDescendants = true
notificationTemplate.Size = UDim2.new(1, 0, 0, 20)
notificationTemplate.Visible = false
notificationTemplate.Font = Enum.Font.SourceSans
notificationTemplate.Text = ""
notificationTemplate.TextColor3 = Color3.fromRGB(255, 255, 255)
notificationTemplate.TextSize = 19.000
notificationTemplate.TextWrapped = true

teleportersFrame.Name = "teleportersFrame"
teleportersFrame.Parent = mainFrame
teleportersFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
teleportersFrame.BackgroundTransparency = 1.000
teleportersFrame.ClipsDescendants = true
teleportersFrame.Position = UDim2.new(0, 110, 0, 0)
teleportersFrame.Size = UDim2.new(1, -110, 0, 45)

teleportingLabel.Name = "teleportingLabel"
teleportingLabel.Parent = teleportersFrame
teleportingLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
teleportingLabel.BackgroundTransparency = 0.800
teleportingLabel.Position = UDim2.new(0, 5, 0, 5)
teleportingLabel.Size = UDim2.new(1, -10, 1, -10)
teleportingLabel.Font = Enum.Font.SourceSans
teleportingLabel.Text = "tping to players delay (0 = disable)"
teleportingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportingLabel.TextSize = 14.000
teleportingLabel.TextYAlignment = Enum.TextYAlignment.Top

UICorner_8.Parent = teleportingLabel

tpingTextbox.Name = "tpingTextbox"
tpingTextbox.Parent = teleportingLabel
tpingTextbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
tpingTextbox.BackgroundTransparency = 1.000
tpingTextbox.Position = UDim2.new(0, 0, 0, 13)
tpingTextbox.Size = UDim2.new(1, 0, 1, -13)
tpingTextbox.ClearTextOnFocus = false
tpingTextbox.Font = Enum.Font.SourceSans
tpingTextbox.Text = "0"
tpingTextbox.TextColor3 = Color3.fromRGB(0, 255, 0)
tpingTextbox.TextSize = 16.000

local function align(Part0, Part1)
	Part0.CustomPhysicalProperties = PhysicalProperties.new(0.001, 0.001, 0.001, 0.001, 0.001)
	local att1 = Instance.new("Attachment")
	att1.Orientation = Vector3.new(0, 0, 0)
	att1.Position = Vector3.new(0, 0, 0)
	att1.Archivable = true
	local att0 = att1:Clone()

	local ap = Instance.new("AlignPosition", att0)
	ap.ApplyAtCenterOfMass = true
	ap.MaxForce = 9e9
	ap.MaxVelocity = 9e9
	ap.ReactionForceEnabled = false
	ap.Responsiveness = 200
	ap.RigidityEnabled = false

	ap.Attachment1 = att1
	ap.Attachment0 = att0

	att1.Parent = Part1
	att0.Parent = Part0
end

local rs = game:GetService("RunService")

local function notify(msg)
	spawn(function()
		local label = notificationTemplate:Clone()
		label.Text = msg
		label.Parent = notificationsFrame
		label.Size = UDim2.new(1, 0, 0, 0)
		label.Visible = true
		local siz = 0
		while rs.Stepped:Wait() and label and label.Parent and (siz < 20) do
			siz += 1
			label.Size = UDim2.new(1, 0, 0, siz)
		end
		if label and label.Parent then
			wait(15)
			while rs.Stepped:Wait() and label and label.Parent and (label.TextTransparency < 1) do
				label.TextTransparency += 0.1
			end
			if label and label.Parent then
				label:Destroy()
			end
		end
	end)
end

local plrs = game:GetService("Players")
local lp = plrs.LocalPlayer
local mouse = lp:GetMouse()
local ws = game:GetService("Workspace")
local c = nil

local function resReq()
	local nm = Instance.new("Model")
	local nh = Instance.new("Humanoid", nm)
	nh.Health = 100
	lp.Character = nm
	nh.Health = 0
	nh:Destroy()
	nm:Destroy()
end

local parts = {}

ws.DescendantRemoving:Connect(function(des)
	if table.find(parts, des) then
		local desn = des.Name
		wait()
		if c and c.Parent then
			notify("lost part: " .. desn)
		end
	end
end)

toggleButton.MouseButton1Click:Connect(function()
	if c and c.Parent then
		resReq()
		lp.Character = c
		notify("attempting to respawn...")
	else
		notify("Loading...")
		c = lp.Character
		if not (c and c.Parent) then
			notify("error: character not found")
			return nil
		end
		local hum = c:FindFirstChildOfClass("Humanoid")
		if not (hum and hum.Parent) then
			notify("error: humanoid not found")
			return nil
		end
		if hum.Health == 0 then
			notify("error: humanoid health 0")
			return nil
		end
		resReq()
		lp.Character = c
		wait(5.1)
		if not (c and c.Parent) then
			notify("error: character removed")
			return nil
		end
		if not (hum and hum.Parent) then
			notify("error: humanoid removed")
			return nil
		end
		if hum.Health == 0 then
			notify("error: humanoid died")
			return nil
		end
		c:BreakJoints()
		hum.Health = 0
		wait()
		if not (c and c.Parent) then
			notify("error: character removed")
			return nil
		end
		parts = {}
		for i, v in pairs(c:GetDescendants()) do
			if v and v.Parent and v:IsA("BasePart") then
				if v.CanCollide then
					table.insert(parts, v)
				else
					v.Velocity = Vector3.new(0, -1000, 0)
				end
			end
		end
		local hrp = Instance.new("Part", c)
		hrp.Name = "hrp"
		hrp.Anchored = true
		hrp.Transparency = 1
		pcall(function()
			hrp.CFrame = parts[1].CFrame
		end)
		ws.CurrentCamera.CameraSubject = hrp
		for i, v in pairs(parts) do
			if v and v.Parent then
				align(v, hrp)
			end
		end
		spawn(function()
			local currentp = nil
			spawn(function()
				while rs.Stepped:Wait() and c and c.Parent and hrp and hrp.Parent do
					if currentp and currentp.Parent then
						local c1 = currentp.Character
						if c1 and c1.Parent then
							local hed1 = c1:FindFirstChild("Head") or c1:FindFirstChild("Torso") or c1:FindFirstChild("HumanoidRootPart") or c1:FindFirstChildWhichIsA("BasePart")
							if hed1 then
								hrp.CFrame = hed1.CFrame
							end
						end
					end
				end
			end)
			while rs.Heartbeat:Wait() and c and c.Parent and hrp and hrp.Parent do
				local delay = tonumber(tpingTextbox.Text)
				if (not delay) or (delay < 0) then
					delay = 0
				end
				if delay == 0 then
					currentp = false
				else
					wait(delay)
					delay = tonumber(tpingTextbox.Text)
					if (not delay) or (delay < 0) then
						delay = 0
					end
					if c and c.Parent and hrp and hrp.Parent and (delay ~= 0) then
						local getp = plrs:GetPlayers()
						local i1 = false
						for i, v in pairs(getp) do
							if (v == currentp) and (v ~= lp) then
								i1 = i
							end
						end
						if (not i1) then
							i1 = 1
						end
						local function nextp()
							if i1 == #getp then
								i1 = 1
							else
								i1 += 1
							end
							currentp = getp[i1]
						end
						local c1 = nil
						while wait() and not (c1 and c1.Parent) do
							nextp()
							if currentp == lp then
								nextp()
							end
							c1 = currentp.Character
						end
					end
				end
			end
		end)

		spawn(function()
			while c and c.Parent and rs.Heartbeat:Wait() do
				for i, v in pairs(parts) do
					if v and v.Parent then
						v.Velocity = Vector3.new(0, -25.05, 0)
						local s = tonumber(rotSpeedTextbox.Text)
						v.RotVelocity = Vector3.new(s, s, s)
					end
				end
			end
		end)

		spawn(function()
			while rs.Stepped:Wait() and c and c.Parent do
				for i, v in pairs(parts) do
					if v and v.Parent then
						v.CanCollide = false
					end
				end
			end
		end)

		spawn(function()
			local ctrlf = {
				["w"] = false,
				["a"] = false,
				["s"] = false,
				["d"] = false
			}
			mouse.KeyDown:Connect(function(key)
				key = key:lower()
				if ctrlf[key] ~= nil then
					ctrlf[key] = true
				end
			end)
			mouse.KeyUp:Connect(function(key)
				key = key:lower()
				if ctrlf[key] ~= nil then
					ctrlf[key] = false
				end
			end)
			while rs.RenderStepped:Wait() and c and c.Parent do
				if hrp and hrp.Parent then
					local flyspeed = tonumber(flySpeedTextbox.Text)
					local fb = ((ctrlf["w"] and flyspeed) or 0) + ((ctrlf["s"] and -flyspeed) or 0)
					local lr = ((ctrlf["a"] and -flyspeed) or 0) + ((ctrlf["d"] and flyspeed) or 0)
					local camcf = ws.CurrentCamera.CFrame
					local caX, caY, caZ, ca1, ca2, ca3, ca4, ca5, ca6, ca7, ca8, ca9 = camcf:GetComponents()
					local flycf = hrp.CFrame
					flycf = CFrame.new(flycf.X, flycf.Y, flycf.Z, ca1, ca2, ca3, ca4, ca5, ca6, ca7, ca8, ca9)
					flycf += camcf.lookVector * fb
					flycf += camcf.rightVector * lr
					hrp.CFrame = flycf
				end
			end
			
			local c1 = lp.Character
			if c1 and c1.Parent then
				notify("respawned")
			end
			
			if toggleButton and toggleButton.Parent then
				toggleButton.Text = "Start fling"
			end
		end)
		
		if toggleButton and toggleButton.Parent then
			toggleButton.Text = "Respawn"
		end
		
		notify("done")
	end
end)

closeButton.MouseButton1Click:Connect(function()
	if c and c.Parent then
		resReq()
	end
	ultimateFling:Destroy()
end)
end)


TrollSection:NewButton("Dark Dex", "🤓🤓🤡🤡💯", function()
    loadstring(game:HttpGet("https://gist.githubusercontent.com/DinosaurXxX/b757fe011e7e600c0873f967fe427dc2/raw/ee5324771f017073fc30e640323ac2a9b3bfc550/dark%2520dex%2520v4"))()
end)
